[
    {
        "label": "calendar",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "calendar",
        "description": "calendar",
        "detail": "calendar",
        "documentation": {}
    },
    {
        "label": "monthrange",
        "importPath": "calendar",
        "description": "calendar",
        "isExtraImport": true,
        "detail": "calendar",
        "documentation": {}
    },
    {
        "label": "sqlalchemy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "extract",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "extract",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "and_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "extract",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "or_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "and_",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "case",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "extract",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "text",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "engine_from_config",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "pool",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "BigInteger",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DECIMAL",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "UniqueConstraint",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "BigInteger",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "UniqueConstraint",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DECIMAL",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DECIMAL",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "BigInteger",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "UniqueConstraint",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "BigInteger",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DECIMAL",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "BigInteger",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DECIMAL",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Date",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DateTime",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "BigInteger",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DECIMAL",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Date",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "TIMESTAMP",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "BigInteger",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "BigInteger",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Date",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "DECIMAL",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "BigInteger",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Date",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Result",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "api.v1.endpoints",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "api.v1.endpoints",
        "description": "api.v1.endpoints",
        "detail": "api.v1.endpoints",
        "documentation": {}
    },
    {
        "label": "usuario",
        "importPath": "api.v1.endpoints",
        "description": "api.v1.endpoints",
        "isExtraImport": true,
        "detail": "api.v1.endpoints",
        "documentation": {}
    },
    {
        "label": "conta",
        "importPath": "api.v1.endpoints",
        "description": "api.v1.endpoints",
        "isExtraImport": true,
        "detail": "api.v1.endpoints",
        "documentation": {}
    },
    {
        "label": "categoria",
        "importPath": "api.v1.endpoints",
        "description": "api.v1.endpoints",
        "isExtraImport": true,
        "detail": "api.v1.endpoints",
        "documentation": {}
    },
    {
        "label": "cartao_de_credito",
        "importPath": "api.v1.endpoints",
        "description": "api.v1.endpoints",
        "isExtraImport": true,
        "detail": "api.v1.endpoints",
        "documentation": {}
    },
    {
        "label": "fatura",
        "importPath": "api.v1.endpoints",
        "description": "api.v1.endpoints",
        "isExtraImport": true,
        "detail": "api.v1.endpoints",
        "documentation": {}
    },
    {
        "label": "parente",
        "importPath": "api.v1.endpoints",
        "description": "api.v1.endpoints",
        "isExtraImport": true,
        "detail": "api.v1.endpoints",
        "documentation": {}
    },
    {
        "label": "movimentacao",
        "importPath": "api.v1.endpoints",
        "description": "api.v1.endpoints",
        "isExtraImport": true,
        "detail": "api.v1.endpoints",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "api.v1.endpoints.fatura",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "api.v1.endpoints.fatura",
        "description": "api.v1.endpoints.fatura",
        "detail": "api.v1.endpoints.fatura",
        "documentation": {}
    },
    {
        "label": "create_fatura_ano",
        "importPath": "api.v1.endpoints.fatura",
        "description": "api.v1.endpoints.fatura",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.fatura",
        "documentation": {}
    },
    {
        "label": "create_fatura_ano",
        "importPath": "api.v1.endpoints.fatura",
        "description": "api.v1.endpoints.fatura",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.fatura",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "BackgroundTasks",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "logger",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "BackgroundTasks",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Header",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "create_async_engine",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncEngine",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "SQLAlchemyError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "SQLAlchemyError",
        "importPath": "sqlalchemy.exc",
        "description": "sqlalchemy.exc",
        "isExtraImport": true,
        "detail": "sqlalchemy.exc",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy.future",
        "description": "sqlalchemy.future",
        "isExtraImport": true,
        "detail": "sqlalchemy.future",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "ClassVar",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generator",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "get_session",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_current_user",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_current_user",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_session",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_current_user",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_session",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_session",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_current_user",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_session",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_current_user",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_session",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_current_user",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_session",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_session",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "get_current_user",
        "importPath": "core.deps",
        "description": "core.deps",
        "isExtraImport": true,
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoModel",
        "importPath": "models.cartao_credito_model",
        "description": "models.cartao_credito_model",
        "isExtraImport": true,
        "detail": "models.cartao_credito_model",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoModel",
        "importPath": "models.cartao_credito_model",
        "description": "models.cartao_credito_model",
        "isExtraImport": true,
        "detail": "models.cartao_credito_model",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoModel",
        "importPath": "models.cartao_credito_model",
        "description": "models.cartao_credito_model",
        "isExtraImport": true,
        "detail": "models.cartao_credito_model",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoModel",
        "importPath": "models.cartao_credito_model",
        "description": "models.cartao_credito_model",
        "isExtraImport": true,
        "detail": "models.cartao_credito_model",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoModel",
        "importPath": "models.cartao_credito_model",
        "description": "models.cartao_credito_model",
        "isExtraImport": true,
        "detail": "models.cartao_credito_model",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoModel",
        "importPath": "models.cartao_credito_model",
        "description": "models.cartao_credito_model",
        "isExtraImport": true,
        "detail": "models.cartao_credito_model",
        "documentation": {}
    },
    {
        "label": "MovimentacaoModel",
        "importPath": "models.movimentacao_model",
        "description": "models.movimentacao_model",
        "isExtraImport": true,
        "detail": "models.movimentacao_model",
        "documentation": {}
    },
    {
        "label": "MovimentacaoModel",
        "importPath": "models.movimentacao_model",
        "description": "models.movimentacao_model",
        "isExtraImport": true,
        "detail": "models.movimentacao_model",
        "documentation": {}
    },
    {
        "label": "MovimentacaoModel",
        "importPath": "models.movimentacao_model",
        "description": "models.movimentacao_model",
        "isExtraImport": true,
        "detail": "models.movimentacao_model",
        "documentation": {}
    },
    {
        "label": "MovimentacaoModel",
        "importPath": "models.movimentacao_model",
        "description": "models.movimentacao_model",
        "isExtraImport": true,
        "detail": "models.movimentacao_model",
        "documentation": {}
    },
    {
        "label": "MovimentacaoModel",
        "importPath": "models.movimentacao_model",
        "description": "models.movimentacao_model",
        "isExtraImport": true,
        "detail": "models.movimentacao_model",
        "documentation": {}
    },
    {
        "label": "MovimentacaoModel",
        "importPath": "models.movimentacao_model",
        "description": "models.movimentacao_model",
        "isExtraImport": true,
        "detail": "models.movimentacao_model",
        "documentation": {}
    },
    {
        "label": "MovimentacaoModel",
        "importPath": "models.movimentacao_model",
        "description": "models.movimentacao_model",
        "isExtraImport": true,
        "detail": "models.movimentacao_model",
        "documentation": {}
    },
    {
        "label": "MovimentacaoModel",
        "importPath": "models.movimentacao_model",
        "description": "models.movimentacao_model",
        "isExtraImport": true,
        "detail": "models.movimentacao_model",
        "documentation": {}
    },
    {
        "label": "MovimentacaoModel",
        "importPath": "models.movimentacao_model",
        "description": "models.movimentacao_model",
        "isExtraImport": true,
        "detail": "models.movimentacao_model",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoSchema",
        "importPath": "schemas.cartao_de_credito_schema",
        "description": "schemas.cartao_de_credito_schema",
        "isExtraImport": true,
        "detail": "schemas.cartao_de_credito_schema",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoSchemaId",
        "importPath": "schemas.cartao_de_credito_schema",
        "description": "schemas.cartao_de_credito_schema",
        "isExtraImport": true,
        "detail": "schemas.cartao_de_credito_schema",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoSchemaUpdate",
        "importPath": "schemas.cartao_de_credito_schema",
        "description": "schemas.cartao_de_credito_schema",
        "isExtraImport": true,
        "detail": "schemas.cartao_de_credito_schema",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoSchemaFatura",
        "importPath": "schemas.cartao_de_credito_schema",
        "description": "schemas.cartao_de_credito_schema",
        "isExtraImport": true,
        "detail": "schemas.cartao_de_credito_schema",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "isExtraImport": true,
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "FaturaModel",
        "importPath": "models.fatura_model",
        "description": "models.fatura_model",
        "isExtraImport": true,
        "detail": "models.fatura_model",
        "documentation": {}
    },
    {
        "label": "FaturaModel",
        "importPath": "models.fatura_model",
        "description": "models.fatura_model",
        "isExtraImport": true,
        "detail": "models.fatura_model",
        "documentation": {}
    },
    {
        "label": "FaturaModel",
        "importPath": "models.fatura_model",
        "description": "models.fatura_model",
        "isExtraImport": true,
        "detail": "models.fatura_model",
        "documentation": {}
    },
    {
        "label": "FaturaModel",
        "importPath": "models.fatura_model",
        "description": "models.fatura_model",
        "isExtraImport": true,
        "detail": "models.fatura_model",
        "documentation": {}
    },
    {
        "label": "FaturaModel",
        "importPath": "models.fatura_model",
        "description": "models.fatura_model",
        "isExtraImport": true,
        "detail": "models.fatura_model",
        "documentation": {}
    },
    {
        "label": "FaturaModel",
        "importPath": "models.fatura_model",
        "description": "models.fatura_model",
        "isExtraImport": true,
        "detail": "models.fatura_model",
        "documentation": {}
    },
    {
        "label": "joinedload",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "joinedload",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "joinedload",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "selectinload",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "declarative_base",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "sessionmaker",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "relationship",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "CategoriaModel",
        "importPath": "models.categoria_model",
        "description": "models.categoria_model",
        "isExtraImport": true,
        "detail": "models.categoria_model",
        "documentation": {}
    },
    {
        "label": "CategoriaModel",
        "importPath": "models.categoria_model",
        "description": "models.categoria_model",
        "isExtraImport": true,
        "detail": "models.categoria_model",
        "documentation": {}
    },
    {
        "label": "CategoriaModel",
        "importPath": "models.categoria_model",
        "description": "models.categoria_model",
        "isExtraImport": true,
        "detail": "models.categoria_model",
        "documentation": {}
    },
    {
        "label": "CategoriaModel",
        "importPath": "models.categoria_model",
        "description": "models.categoria_model",
        "isExtraImport": true,
        "detail": "models.categoria_model",
        "documentation": {}
    },
    {
        "label": "CategoriaSchema",
        "importPath": "schemas.categoria_schema",
        "description": "schemas.categoria_schema",
        "isExtraImport": true,
        "detail": "schemas.categoria_schema",
        "documentation": {}
    },
    {
        "label": "CategoriaSchemaUpdate",
        "importPath": "schemas.categoria_schema",
        "description": "schemas.categoria_schema",
        "isExtraImport": true,
        "detail": "schemas.categoria_schema",
        "documentation": {}
    },
    {
        "label": "CategoriaSchemaId",
        "importPath": "schemas.categoria_schema",
        "description": "schemas.categoria_schema",
        "isExtraImport": true,
        "detail": "schemas.categoria_schema",
        "documentation": {}
    },
    {
        "label": "TipoMovimentacao",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "CondicaoPagamento",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "FormaPagamento",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoMovimentacao",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoRecorrencia",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoMovimentacao",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoMovimentacao",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoMovimentacao",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoCategoria",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoConta",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "CondicaoPagamento",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "FormaPagamento",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoMovimentacao",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoMovimentacao",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoCategoria",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoConta",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "CondicaoPagamento",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "FormaPagamento",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoMovimentacao",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoRecorrencia",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "FormaPagamento",
        "importPath": "models.enums",
        "description": "models.enums",
        "isExtraImport": true,
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "ContaModel",
        "importPath": "models.conta_model",
        "description": "models.conta_model",
        "isExtraImport": true,
        "detail": "models.conta_model",
        "documentation": {}
    },
    {
        "label": "ContaModel",
        "importPath": "models.conta_model",
        "description": "models.conta_model",
        "isExtraImport": true,
        "detail": "models.conta_model",
        "documentation": {}
    },
    {
        "label": "ContaModel",
        "importPath": "models.conta_model",
        "description": "models.conta_model",
        "isExtraImport": true,
        "detail": "models.conta_model",
        "documentation": {}
    },
    {
        "label": "ContaModel",
        "importPath": "models.conta_model",
        "description": "models.conta_model",
        "isExtraImport": true,
        "detail": "models.conta_model",
        "documentation": {}
    },
    {
        "label": "ContaModel",
        "importPath": "models.conta_model",
        "description": "models.conta_model",
        "isExtraImport": true,
        "detail": "models.conta_model",
        "documentation": {}
    },
    {
        "label": "ContaModel",
        "importPath": "models.conta_model",
        "description": "models.conta_model",
        "isExtraImport": true,
        "detail": "models.conta_model",
        "documentation": {}
    },
    {
        "label": "ContaSchema",
        "importPath": "schemas.conta_schema",
        "description": "schemas.conta_schema",
        "isExtraImport": true,
        "detail": "schemas.conta_schema",
        "documentation": {}
    },
    {
        "label": "ContaSchemaId",
        "importPath": "schemas.conta_schema",
        "description": "schemas.conta_schema",
        "isExtraImport": true,
        "detail": "schemas.conta_schema",
        "documentation": {}
    },
    {
        "label": "ContaSchemaUpdate",
        "importPath": "schemas.conta_schema",
        "description": "schemas.conta_schema",
        "isExtraImport": true,
        "detail": "schemas.conta_schema",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "ROUND_HALF_UP",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "handle_db_exceptions",
        "importPath": "core.utils",
        "description": "core.utils",
        "isExtraImport": true,
        "detail": "core.utils",
        "documentation": {}
    },
    {
        "label": "handle_db_exceptions",
        "importPath": "core.utils",
        "description": "core.utils",
        "isExtraImport": true,
        "detail": "core.utils",
        "documentation": {}
    },
    {
        "label": "handle_db_exceptions",
        "importPath": "core.utils",
        "description": "core.utils",
        "isExtraImport": true,
        "detail": "core.utils",
        "documentation": {}
    },
    {
        "label": "handle_db_exceptions",
        "importPath": "core.utils",
        "description": "core.utils",
        "isExtraImport": true,
        "detail": "core.utils",
        "documentation": {}
    },
    {
        "label": "DivideModel",
        "importPath": "models.divide_model",
        "description": "models.divide_model",
        "isExtraImport": true,
        "detail": "models.divide_model",
        "documentation": {}
    },
    {
        "label": "DivideModel",
        "importPath": "models.divide_model",
        "description": "models.divide_model",
        "isExtraImport": true,
        "detail": "models.divide_model",
        "documentation": {}
    },
    {
        "label": "DivideModel",
        "importPath": "models.divide_model",
        "description": "models.divide_model",
        "isExtraImport": true,
        "detail": "models.divide_model",
        "documentation": {}
    },
    {
        "label": "DivideModel",
        "importPath": "models.divide_model",
        "description": "models.divide_model",
        "isExtraImport": true,
        "detail": "models.divide_model",
        "documentation": {}
    },
    {
        "label": "ParenteModel",
        "importPath": "models.parente_model",
        "description": "models.parente_model",
        "isExtraImport": true,
        "detail": "models.parente_model",
        "documentation": {}
    },
    {
        "label": "ParenteModel",
        "importPath": "models.parente_model",
        "description": "models.parente_model",
        "isExtraImport": true,
        "detail": "models.parente_model",
        "documentation": {}
    },
    {
        "label": "ParenteModel",
        "importPath": "models.parente_model",
        "description": "models.parente_model",
        "isExtraImport": true,
        "detail": "models.parente_model",
        "documentation": {}
    },
    {
        "label": "ParenteModel",
        "importPath": "models.parente_model",
        "description": "models.parente_model",
        "isExtraImport": true,
        "detail": "models.parente_model",
        "documentation": {}
    },
    {
        "label": "ParenteModel",
        "importPath": "models.parente_model",
        "description": "models.parente_model",
        "isExtraImport": true,
        "detail": "models.parente_model",
        "documentation": {}
    },
    {
        "label": "FaturaSchema",
        "importPath": "schemas.fatura_schema",
        "description": "schemas.fatura_schema",
        "isExtraImport": true,
        "detail": "schemas.fatura_schema",
        "documentation": {}
    },
    {
        "label": "FaturaSchemaUpdate",
        "importPath": "schemas.fatura_schema",
        "description": "schemas.fatura_schema",
        "isExtraImport": true,
        "detail": "schemas.fatura_schema",
        "documentation": {}
    },
    {
        "label": "FaturaSchemaId",
        "importPath": "schemas.fatura_schema",
        "description": "schemas.fatura_schema",
        "isExtraImport": true,
        "detail": "schemas.fatura_schema",
        "documentation": {}
    },
    {
        "label": "FaturaSchemaInfo",
        "importPath": "schemas.fatura_schema",
        "description": "schemas.fatura_schema",
        "isExtraImport": true,
        "detail": "schemas.fatura_schema",
        "documentation": {}
    },
    {
        "label": "FaturaSchemaInfo",
        "importPath": "schemas.fatura_schema",
        "description": "schemas.fatura_schema",
        "isExtraImport": true,
        "detail": "schemas.fatura_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoFaturaSchemaList",
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "isExtraImport": true,
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoRequestFilterSchema",
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "isExtraImport": true,
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchemaConsolida",
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "isExtraImport": true,
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchemaId",
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "isExtraImport": true,
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchemaList",
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "isExtraImport": true,
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchemaReceitaDespesa",
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "isExtraImport": true,
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchemaTransferencia",
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "isExtraImport": true,
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchemaUpdate",
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "isExtraImport": true,
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "ParenteResponse",
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "isExtraImport": true,
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchemaTransferencia",
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "isExtraImport": true,
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "RepeticaoModel",
        "importPath": "models.repeticao_model",
        "description": "models.repeticao_model",
        "isExtraImport": true,
        "detail": "models.repeticao_model",
        "documentation": {}
    },
    {
        "label": "RepeticaoModel",
        "importPath": "models.repeticao_model",
        "description": "models.repeticao_model",
        "isExtraImport": true,
        "detail": "models.repeticao_model",
        "documentation": {}
    },
    {
        "label": "RepeticaoModel",
        "importPath": "models.repeticao_model",
        "description": "models.repeticao_model",
        "isExtraImport": true,
        "detail": "models.repeticao_model",
        "documentation": {}
    },
    {
        "label": "RepeticaoModel",
        "importPath": "models.repeticao_model",
        "description": "models.repeticao_model",
        "isExtraImport": true,
        "detail": "models.repeticao_model",
        "documentation": {}
    },
    {
        "label": "relativedelta",
        "importPath": "dateutil.relativedelta",
        "description": "dateutil.relativedelta",
        "isExtraImport": true,
        "detail": "dateutil.relativedelta",
        "documentation": {}
    },
    {
        "label": "relativedelta",
        "importPath": "dateutil.relativedelta",
        "description": "dateutil.relativedelta",
        "isExtraImport": true,
        "detail": "dateutil.relativedelta",
        "documentation": {}
    },
    {
        "label": "email",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "email",
        "description": "email",
        "detail": "email",
        "documentation": {}
    },
    {
        "label": "encoders",
        "importPath": "email",
        "description": "email",
        "isExtraImport": true,
        "detail": "email",
        "documentation": {}
    },
    {
        "label": "encoders",
        "importPath": "email",
        "description": "email",
        "isExtraImport": true,
        "detail": "email",
        "documentation": {}
    },
    {
        "label": "encoders",
        "importPath": "email",
        "description": "email",
        "isExtraImport": true,
        "detail": "email",
        "documentation": {}
    },
    {
        "label": "encoders",
        "importPath": "email",
        "description": "email",
        "isExtraImport": true,
        "detail": "email",
        "documentation": {}
    },
    {
        "label": "MIMEBase",
        "importPath": "email.mime.base",
        "description": "email.mime.base",
        "isExtraImport": true,
        "detail": "email.mime.base",
        "documentation": {}
    },
    {
        "label": "MIMEBase",
        "importPath": "email.mime.base",
        "description": "email.mime.base",
        "isExtraImport": true,
        "detail": "email.mime.base",
        "documentation": {}
    },
    {
        "label": "MIMEBase",
        "importPath": "email.mime.base",
        "description": "email.mime.base",
        "isExtraImport": true,
        "detail": "email.mime.base",
        "documentation": {}
    },
    {
        "label": "MIMEBase",
        "importPath": "email.mime.base",
        "description": "email.mime.base",
        "isExtraImport": true,
        "detail": "email.mime.base",
        "documentation": {}
    },
    {
        "label": "MIMEMultipart",
        "importPath": "email.mime.multipart",
        "description": "email.mime.multipart",
        "isExtraImport": true,
        "detail": "email.mime.multipart",
        "documentation": {}
    },
    {
        "label": "MIMEMultipart",
        "importPath": "email.mime.multipart",
        "description": "email.mime.multipart",
        "isExtraImport": true,
        "detail": "email.mime.multipart",
        "documentation": {}
    },
    {
        "label": "MIMEMultipart",
        "importPath": "email.mime.multipart",
        "description": "email.mime.multipart",
        "isExtraImport": true,
        "detail": "email.mime.multipart",
        "documentation": {}
    },
    {
        "label": "MIMEMultipart",
        "importPath": "email.mime.multipart",
        "description": "email.mime.multipart",
        "isExtraImport": true,
        "detail": "email.mime.multipart",
        "documentation": {}
    },
    {
        "label": "MIMEText",
        "importPath": "email.mime.text",
        "description": "email.mime.text",
        "isExtraImport": true,
        "detail": "email.mime.text",
        "documentation": {}
    },
    {
        "label": "MIMEText",
        "importPath": "email.mime.text",
        "description": "email.mime.text",
        "isExtraImport": true,
        "detail": "email.mime.text",
        "documentation": {}
    },
    {
        "label": "MIMEText",
        "importPath": "email.mime.text",
        "description": "email.mime.text",
        "isExtraImport": true,
        "detail": "email.mime.text",
        "documentation": {}
    },
    {
        "label": "MIMEText",
        "importPath": "email.mime.text",
        "description": "email.mime.text",
        "isExtraImport": true,
        "detail": "email.mime.text",
        "documentation": {}
    },
    {
        "label": "formatdate",
        "importPath": "email.utils",
        "description": "email.utils",
        "isExtraImport": true,
        "detail": "email.utils",
        "documentation": {}
    },
    {
        "label": "formatdate",
        "importPath": "email.utils",
        "description": "email.utils",
        "isExtraImport": true,
        "detail": "email.utils",
        "documentation": {}
    },
    {
        "label": "formatdate",
        "importPath": "email.utils",
        "description": "email.utils",
        "isExtraImport": true,
        "detail": "email.utils",
        "documentation": {}
    },
    {
        "label": "io",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "io",
        "description": "io",
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "smtplib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "smtplib",
        "description": "smtplib",
        "detail": "smtplib",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "JSONResponse",
        "importPath": "fastapi.responses",
        "description": "fastapi.responses",
        "isExtraImport": true,
        "detail": "fastapi.responses",
        "documentation": {}
    },
    {
        "label": "JSONResponse",
        "importPath": "fastapi.responses",
        "description": "fastapi.responses",
        "isExtraImport": true,
        "detail": "fastapi.responses",
        "documentation": {}
    },
    {
        "label": "pdfkit",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pdfkit",
        "description": "pdfkit",
        "detail": "pdfkit",
        "documentation": {}
    },
    {
        "label": "core.auth",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "core.auth",
        "description": "core.auth",
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "send_email",
        "importPath": "core.auth",
        "description": "core.auth",
        "isExtraImport": true,
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "send_email",
        "importPath": "core.auth",
        "description": "core.auth",
        "isExtraImport": true,
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "auth",
        "importPath": "core.auth",
        "description": "core.auth",
        "isExtraImport": true,
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "generate_token_access",
        "importPath": "core.auth",
        "description": "core.auth",
        "isExtraImport": true,
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "decoded_token",
        "importPath": "core.auth",
        "description": "core.auth",
        "isExtraImport": true,
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "send_email_to_reset_password",
        "importPath": "core.auth",
        "description": "core.auth",
        "isExtraImport": true,
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "oauth2_schema",
        "importPath": "core.auth",
        "description": "core.auth",
        "isExtraImport": true,
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "ParenteSchema",
        "importPath": "schemas.parente_schema",
        "description": "schemas.parente_schema",
        "isExtraImport": true,
        "detail": "schemas.parente_schema",
        "documentation": {}
    },
    {
        "label": "ParenteSchemaCobranca",
        "importPath": "schemas.parente_schema",
        "description": "schemas.parente_schema",
        "isExtraImport": true,
        "detail": "schemas.parente_schema",
        "documentation": {}
    },
    {
        "label": "ParenteSchemaUpdate",
        "importPath": "schemas.parente_schema",
        "description": "schemas.parente_schema",
        "isExtraImport": true,
        "detail": "schemas.parente_schema",
        "documentation": {}
    },
    {
        "label": "ParenteSchemaId",
        "importPath": "schemas.parente_schema",
        "description": "schemas.parente_schema",
        "isExtraImport": true,
        "detail": "schemas.parente_schema",
        "documentation": {}
    },
    {
        "label": "asyncio",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "asyncio",
        "description": "asyncio",
        "detail": "asyncio",
        "documentation": {}
    },
    {
        "label": "defaultdict",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "HTML",
        "importPath": "weasyprint",
        "description": "weasyprint",
        "isExtraImport": true,
        "detail": "weasyprint",
        "documentation": {}
    },
    {
        "label": "generate_hash",
        "importPath": "core.security",
        "description": "core.security",
        "isExtraImport": true,
        "detail": "core.security",
        "documentation": {}
    },
    {
        "label": "UsuarioSchema",
        "importPath": "schemas.usuario_schema",
        "description": "schemas.usuario_schema",
        "isExtraImport": true,
        "detail": "schemas.usuario_schema",
        "documentation": {}
    },
    {
        "label": "UpdateUsuarioSchema",
        "importPath": "schemas.usuario_schema",
        "description": "schemas.usuario_schema",
        "isExtraImport": true,
        "detail": "schemas.usuario_schema",
        "documentation": {}
    },
    {
        "label": "ResetPasswordRequest",
        "importPath": "schemas.resetPasswordRequest",
        "description": "schemas.resetPasswordRequest",
        "isExtraImport": true,
        "detail": "schemas.resetPasswordRequest",
        "documentation": {}
    },
    {
        "label": "RecoverPasswordRequest",
        "importPath": "schemas.recoverPasswordRequest",
        "description": "schemas.recoverPasswordRequest",
        "isExtraImport": true,
        "detail": "schemas.recoverPasswordRequest",
        "documentation": {}
    },
    {
        "label": "OAuth2PasswordRequestForm",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "OAuth2PasswordBearer",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "jwt",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jwt",
        "description": "jwt",
        "detail": "jwt",
        "documentation": {}
    },
    {
        "label": "secrets",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "secrets",
        "description": "secrets",
        "detail": "secrets",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "EmailStr",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "ConfigDict",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "ConfigDict",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "ConfigDict",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "ConfigDict",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "EmailStr",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "ConfigDict",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "ConfigDict",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "ConfigDict",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "ConfigDict",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "EmailStr",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "check_password",
        "importPath": "core.security ",
        "description": "core.security ",
        "isExtraImport": true,
        "detail": "core.security ",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "pytz",
        "description": "pytz",
        "isExtraImport": true,
        "detail": "pytz",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "core.configs",
        "description": "core.configs",
        "isExtraImport": true,
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "jwt",
        "importPath": "jose",
        "description": "jose",
        "isExtraImport": true,
        "detail": "jose",
        "documentation": {}
    },
    {
        "label": "JWTError",
        "importPath": "jose",
        "description": "jose",
        "isExtraImport": true,
        "detail": "jose",
        "documentation": {}
    },
    {
        "label": "jwt",
        "importPath": "jose",
        "description": "jose",
        "isExtraImport": true,
        "detail": "jose",
        "documentation": {}
    },
    {
        "label": "JWTError",
        "importPath": "jose",
        "description": "jose",
        "isExtraImport": true,
        "detail": "jose",
        "documentation": {}
    },
    {
        "label": "jwt",
        "importPath": "jose",
        "description": "jose",
        "isExtraImport": true,
        "detail": "jose",
        "documentation": {}
    },
    {
        "label": "JWTError",
        "importPath": "jose",
        "description": "jose",
        "isExtraImport": true,
        "detail": "jose",
        "documentation": {}
    },
    {
        "label": "BaseSettings",
        "importPath": "pydantic_settings",
        "description": "pydantic_settings",
        "isExtraImport": true,
        "detail": "pydantic_settings",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "core.database",
        "description": "core.database",
        "isExtraImport": true,
        "detail": "core.database",
        "documentation": {}
    },
    {
        "label": "engine",
        "importPath": "core.database",
        "description": "core.database",
        "isExtraImport": true,
        "detail": "core.database",
        "documentation": {}
    },
    {
        "label": "CryptContext",
        "importPath": "passlib.context",
        "description": "passlib.context",
        "isExtraImport": true,
        "detail": "passlib.context",
        "documentation": {}
    },
    {
        "label": "traceback",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "traceback",
        "description": "traceback",
        "detail": "traceback",
        "documentation": {}
    },
    {
        "label": "fileConfig",
        "importPath": "logging.config",
        "description": "logging.config",
        "isExtraImport": true,
        "detail": "logging.config",
        "documentation": {}
    },
    {
        "label": "context",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "__all_models",
        "importPath": "models",
        "description": "models",
        "isExtraImport": true,
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "httpx",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "httpx",
        "description": "httpx",
        "detail": "httpx",
        "documentation": {}
    },
    {
        "label": "AsyncClient",
        "importPath": "httpx",
        "description": "httpx",
        "isExtraImport": true,
        "detail": "httpx",
        "documentation": {}
    },
    {
        "label": "ASGITransport",
        "importPath": "httpx",
        "description": "httpx",
        "isExtraImport": true,
        "detail": "httpx",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "AsyncMock",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "MagicMock",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "Mock",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "call",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "patch",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "AsyncMock",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "patch",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "patch",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "MagicMock",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "MagicMock",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "patch",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "patch",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "MagicMock",
        "importPath": "unittest.mock",
        "description": "unittest.mock",
        "isExtraImport": true,
        "detail": "unittest.mock",
        "documentation": {}
    },
    {
        "label": "ajustar_saldo_conta",
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "TipoMovimentacao",
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "ajustar_data_pagamento",
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchemaReceitaDespesa",
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "CondicaoPagamento",
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "TipoRecorrencia",
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "calcular_parcelas_precisas",
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "create_movimentacao_despesa",
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "criar_repeticao",
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "ajustar_limite_fatura_gastos",
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "processar_delecao_movimentacao",
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "validar_categoria",
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "validar_conta",
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "unittest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "unittest",
        "description": "unittest",
        "detail": "unittest",
        "documentation": {}
    },
    {
        "label": "mock",
        "importPath": "unittest",
        "description": "unittest",
        "isExtraImport": true,
        "detail": "unittest",
        "documentation": {}
    },
    {
        "label": "app",
        "importPath": "main",
        "description": "main",
        "isExtraImport": true,
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "executar_funcao_assincrona",
        "importPath": "main",
        "description": "main",
        "isExtraImport": true,
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "agendar_execucao",
        "importPath": "main",
        "description": "main",
        "isExtraImport": true,
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "scheduler",
        "importPath": "main",
        "description": "main",
        "isExtraImport": true,
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "getValidToken",
        "importPath": "tests.config",
        "description": "tests.config",
        "isExtraImport": true,
        "detail": "tests.config",
        "documentation": {}
    },
    {
        "label": "base64",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "base64",
        "description": "base64",
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "criar_email_data",
        "importPath": "api.v1.endpoints.parente",
        "description": "api.v1.endpoints.parente",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.parente",
        "documentation": {}
    },
    {
        "label": "send_email",
        "importPath": "api.v1.endpoints.parente",
        "description": "api.v1.endpoints.parente",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.parente",
        "documentation": {}
    },
    {
        "label": "processar_usuarios_em_atraso",
        "importPath": "api.v1.endpoints.rotina",
        "description": "api.v1.endpoints.rotina",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.rotina",
        "documentation": {}
    },
    {
        "label": "send_email",
        "importPath": "api.v1.endpoints.rotina",
        "description": "api.v1.endpoints.rotina",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.rotina",
        "documentation": {}
    },
    {
        "label": "check_and_send_email",
        "importPath": "api.v1.endpoints.rotina",
        "description": "api.v1.endpoints.rotina",
        "isExtraImport": true,
        "detail": "api.v1.endpoints.rotina",
        "documentation": {}
    },
    {
        "label": "BackgroundScheduler",
        "importPath": "apscheduler.schedulers.background",
        "description": "apscheduler.schedulers.background",
        "isExtraImport": true,
        "detail": "apscheduler.schedulers.background",
        "documentation": {}
    },
    {
        "label": "BackgroundScheduler",
        "importPath": "apscheduler.schedulers.background",
        "description": "apscheduler.schedulers.background",
        "isExtraImport": true,
        "detail": "apscheduler.schedulers.background",
        "documentation": {}
    },
    {
        "label": "fcntl",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "fcntl",
        "description": "fcntl",
        "detail": "fcntl",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "CORSMiddleware",
        "importPath": "fastapi.middleware.cors",
        "description": "fastapi.middleware.cors",
        "isExtraImport": true,
        "detail": "fastapi.middleware.cors",
        "documentation": {}
    },
    {
        "label": "asynccontextmanager",
        "importPath": "contextlib",
        "description": "contextlib",
        "isExtraImport": true,
        "detail": "contextlib",
        "documentation": {}
    },
    {
        "label": "api_router",
        "importPath": "api.v1.api",
        "description": "api.v1.api",
        "isExtraImport": true,
        "detail": "api.v1.api",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "api.v1.endpoints.cartao_de_credito",
        "description": "api.v1.endpoints.cartao_de_credito",
        "peekOfCode": "router = APIRouter()\n@router.post('/cadastro', status_code=status.HTTP_201_CREATED)\nasync def post_cartao_credito(\n    cartao_credito: CartaoCreditoSchemaFatura, \n    db: AsyncSession = Depends(get_session), \n    usuario_logado: UsuarioModel = Depends(get_current_user)\n):\n    if cartao_credito.dia_fechamento == cartao_credito.dia_vencimento:\n        raise HTTPException(status_code=status.HTTP_400_BAD_REQUEST, detail=\"A data de venciomento deve ser diferente da data de fechamento\")\n    novo_cartao: CartaoCreditoModel = CartaoCreditoModel(",
        "detail": "api.v1.endpoints.cartao_de_credito",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "api.v1.endpoints.categoria",
        "description": "api.v1.endpoints.categoria",
        "peekOfCode": "router = APIRouter()\n@router.post('/cadastro', status_code=status.HTTP_201_CREATED)\nasync def post_categoria(\n    categoria: CategoriaSchema, \n    db: AsyncSession = Depends(get_session),\n    usuario_logado: UsuarioModel = Depends(get_current_user)\n):\n    nova_categoria: CategoriaModel = CategoriaModel(\n        nome=categoria.nome,\n        tipo_categoria=categoria.tipo_categoria,",
        "detail": "api.v1.endpoints.categoria",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "api.v1.endpoints.conta",
        "description": "api.v1.endpoints.conta",
        "peekOfCode": "router = APIRouter()\n@router.post('/cadastro', status_code=status.HTTP_201_CREATED)\nasync def post_conta(\n    conta: ContaSchema, \n    db: AsyncSession = Depends(get_session),  \n    usuario_logado: UsuarioModel = Depends(get_current_user)\n):\n    nova_conta: ContaModel = ContaModel(\n        descricao=conta.descricao,\n        tipo_conta=str (conta.tipo_conta.value),",
        "detail": "api.v1.endpoints.conta",
        "documentation": {}
    },
    {
        "label": "adjust_to_valid_date",
        "kind": 2,
        "importPath": "api.v1.endpoints.fatura",
        "description": "api.v1.endpoints.fatura",
        "peekOfCode": "def adjust_to_valid_date(ano: int, mes: int, dia: int) -> date:\n    \"\"\"\n    Ajusta para o próximo dia válido no mês, caso o dia especificado não exista.\n    Se o dia estiver fora do limite para o mês, ajusta para o último dia do mês.\n    \"\"\"\n    ultimo_dia_mes = calendar.monthrange(ano, mes)[1]\n    if dia > ultimo_dia_mes:\n        dia = ultimo_dia_mes\n    return date(ano, mes, dia)\n@router.post(\"/fechar\")",
        "detail": "api.v1.endpoints.fatura",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "api.v1.endpoints.fatura",
        "description": "api.v1.endpoints.fatura",
        "peekOfCode": "router = APIRouter()\nfrom datetime import timedelta\nasync def verificar_fatura_existente(db: AsyncSession, id_cartao_credito: int, mes: int, ano: int) -> Optional[FaturaModel]:\n    # Verificar se já existe uma fatura para o mesmo mês e ano\n    result = await db.execute(\n        select(FaturaModel).where(\n            FaturaModel.id_cartao_credito == id_cartao_credito,\n            extract('month', FaturaModel.data_vencimento) == mes,\n            extract('year', FaturaModel.data_vencimento) == ano,\n            extract('month', FaturaModel.data_fechamento) == mes,",
        "detail": "api.v1.endpoints.fatura",
        "documentation": {}
    },
    {
        "label": "ajustar_data_pagamento",
        "kind": 2,
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "peekOfCode": "def ajustar_data_pagamento(movimentacao: MovimentacaoSchemaReceitaDespesa, data_pagamento: date):\n    if movimentacao.condicao_pagamento == CondicaoPagamento.RECORRENTE:\n        if movimentacao.tipo_recorrencia == TipoRecorrencia.ANUAL:\n            data_pagamento = data_pagamento.replace(year=data_pagamento.year + 1)\n        elif movimentacao.tipo_recorrencia == TipoRecorrencia.QUINZENAL:\n            data_pagamento += timedelta(days=15)\n        elif movimentacao.tipo_recorrencia == TipoRecorrencia.SEMANAL:\n            data_pagamento += timedelta(weeks=1)\n        elif movimentacao.tipo_recorrencia == TipoRecorrencia.MENSAL:\n            data_pagamento += relativedelta(months=1)",
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "calcular_parcelas_precisas",
        "kind": 2,
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "peekOfCode": "def calcular_parcelas_precisas(valor_total, quantidade_parcelas):\n    valor_total = Decimal(str(valor_total))\n    quantidade_parcelas = Decimal(str(quantidade_parcelas))\n    valor_parcela = (valor_total / quantidade_parcelas).quantize(Decimal('0.01'), rounding=ROUND_HALF_UP)\n    valor_primeira_parcela = valor_total - (valor_parcela * (quantidade_parcelas - 1))\n    return valor_primeira_parcela, valor_parcela\n@router.post('/cadastro/despesa', status_code=status.HTTP_201_CREATED)\nasync def create_movimentacao_despesa(\n    movimentacao: MovimentacaoSchemaReceitaDespesa,\n    db: AsyncSession = Depends(get_session),",
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "construir_query_movimentacao",
        "kind": 2,
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "peekOfCode": "def construir_query_movimentacao(condicoes):\n    query = (\n            select(MovimentacaoModel)\n            .options(\n                selectinload(MovimentacaoModel.categoria),\n                selectinload(MovimentacaoModel.conta),\n                selectinload(MovimentacaoModel.conta_destino),  \n                selectinload(MovimentacaoModel.repeticao),\n                selectinload(MovimentacaoModel.divisoes),\n                selectinload(MovimentacaoModel.divisoes, DivideModel.parentes),",
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "construir_response",
        "kind": 2,
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "peekOfCode": "def construir_response(movimentacoes: List, requestFilter: MovimentacaoRequestFilterSchema) -> List[MovimentacaoSchemaList]:\n    response = [\n        MovimentacaoSchemaList(\n            id_movimentacao=mov.id_movimentacao,\n            valor=mov.valor,\n            descricao=mov.descricao,\n            tipoMovimentacao=mov.tipoMovimentacao,\n            forma_pagamento=mov.forma_pagamento,\n            condicao_pagamento=mov.condicao_pagamento,\n            datatime=mov.datatime,",
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "ajustar_saldo_conta",
        "kind": 2,
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "peekOfCode": "def ajustar_saldo_conta(\n    conta: ContaModel,\n    movimentacao: MovimentacaoModel,\n    consolidado: bool,\n):\n    if movimentacao.tipoMovimentacao == TipoMovimentacao.DESPESA:\n        if consolidado:\n            conta.saldo -= movimentacao.valor\n        else:\n            conta.saldo += movimentacao.valor",
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "ajustar_limite_fatura_gastos",
        "kind": 2,
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "peekOfCode": "def ajustar_limite_fatura_gastos(\n    cartao_credito: CartaoCreditoModel,\n    fatura: FaturaModel,\n    movimentacao: MovimentacaoModel,\n    participa_limite_fatura_gastos: bool\n):\n    if participa_limite_fatura_gastos is False:\n        cartao_credito.limite_disponivel += movimentacao.valor\n        fatura.fatura_gastos -= movimentacao.valor\n        movimentacao.participa_limite_fatura_gastos = False",
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "api.v1.endpoints.movimentacao",
        "description": "api.v1.endpoints.movimentacao",
        "peekOfCode": "router = APIRouter()\nasync def find_fatura(id_cartao_credito: int, data_pagamento: date, db: AsyncSession):\n    # Consulta para pegar a fatura no mês atual\n    query_mes_atual = select(FaturaModel).filter(\n        FaturaModel.id_cartao_credito == id_cartao_credito,\n        extract('month', FaturaModel.data_fechamento) == data_pagamento.month,\n        extract('year', FaturaModel.data_fechamento) == data_pagamento.year\n    )\n    # Consulta para pegar a fatura do mês seguinte\n    query_mes_seguinte = select(FaturaModel).filter(",
        "detail": "api.v1.endpoints.movimentacao",
        "documentation": {}
    },
    {
        "label": "criar_email_data",
        "kind": 2,
        "importPath": "api.v1.endpoints.parente",
        "description": "api.v1.endpoints.parente",
        "peekOfCode": "def criar_email_data(parente, usuario_logado, cobranca, movimentacoes_data):\n    \"\"\"Cria os dados do email com base nas condições de parente e usuário logado.\"\"\"\n    def formatar_data_brasileira(data_str):\n        \"\"\"Converte data do formato YYYY-MM-DD para DD/MM/YYYY\"\"\"\n        return datetime.strptime(data_str, '%Y-%m-%d').strftime('%d/%m/%Y')\n    def formatar_valor_brasileiro(valor):\n        \"\"\"Formata o valor monetário no padrão brasileiro\"\"\"\n        try:\n            valor_float = float(valor)\n            return f'R$ {valor_float:,.2f}'.replace('.', 'X').replace(',', '.').replace('X', ',')",
        "detail": "api.v1.endpoints.parente",
        "documentation": {}
    },
    {
        "label": "send_email",
        "kind": 2,
        "importPath": "api.v1.endpoints.parente",
        "description": "api.v1.endpoints.parente",
        "peekOfCode": "def send_email(email_data: dict, user_email: str) -> None:\n    try:\n        # Verifique se os dados de e-mail foram lidos corretamente\n        sender_email = config(\"EMAIL_ADDRESS\")\n        sender_password = config(\"EMAIL_PASSWORD\")\n        # Configura a mensagem\n        msg = MIMEMultipart()\n        msg[\"Subject\"] = email_data[\"email_subject\"]\n        msg[\"From\"] = sender_email\n        msg[\"To\"] = user_email",
        "detail": "api.v1.endpoints.parente",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "api.v1.endpoints.parente",
        "description": "api.v1.endpoints.parente",
        "peekOfCode": "router = APIRouter()\n@router.post('/cadastro', status_code=status.HTTP_201_CREATED)\nasync def post_parente(\n    parente: ParenteSchema, \n    db: AsyncSession = Depends(get_session),\n    usuario_logado: UsuarioModel = Depends(get_current_user)\n):\n    if parente.nome.lower() == str(usuario_logado.nome_completo).lower():\n        raise HTTPException(\n            status_code=status.HTTP_400_BAD_REQUEST,",
        "detail": "api.v1.endpoints.parente",
        "documentation": {}
    },
    {
        "label": "send_email",
        "kind": 2,
        "importPath": "api.v1.endpoints.rotina",
        "description": "api.v1.endpoints.rotina",
        "peekOfCode": "def send_email(email_data: dict, user_email: str) -> None:\n    try:\n        # Verifique se os dados de e-mail foram lidos corretamente\n        sender_email = config(\"EMAIL_ADDRESS\")\n        sender_password = config(\"EMAIL_PASSWORD\")\n        print(\"Endereço de e-mail do remetente:\", sender_email)\n        print(\"Senha de aplicativo lida:\", sender_password)\n        # Configura a mensagem\n        msg = MIMEMultipart()\n        msg[\"Subject\"] = email_data[\"email_subject\"]",
        "detail": "api.v1.endpoints.rotina",
        "documentation": {}
    },
    {
        "label": "processar_usuarios_em_atraso",
        "kind": 2,
        "importPath": "api.v1.endpoints.rotina",
        "description": "api.v1.endpoints.rotina",
        "peekOfCode": "def processar_usuarios_em_atraso(usuarios_contas, usuarios_faturas):\n    resultados = []\n    all_user_emails = set(usuarios_contas.keys()) | set(usuarios_faturas.keys())\n    for user_email in all_user_emails:\n        email_body = \"\"\n        total_atraso = 0\n        if user_email in usuarios_contas:\n            contas = usuarios_contas[user_email]\n            email_body += (\n                f\"<h4>Contas em atraso:</h4>\"",
        "detail": "api.v1.endpoints.rotina",
        "documentation": {}
    },
    {
        "label": "logger",
        "kind": 5,
        "importPath": "api.v1.endpoints.rotina",
        "description": "api.v1.endpoints.rotina",
        "peekOfCode": "logger = logging.getLogger(__name__)\ndef send_email(email_data: dict, user_email: str) -> None:\n    try:\n        # Verifique se os dados de e-mail foram lidos corretamente\n        sender_email = config(\"EMAIL_ADDRESS\")\n        sender_password = config(\"EMAIL_PASSWORD\")\n        print(\"Endereço de e-mail do remetente:\", sender_email)\n        print(\"Senha de aplicativo lida:\", sender_password)\n        # Configura a mensagem\n        msg = MIMEMultipart()",
        "detail": "api.v1.endpoints.rotina",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "api.v1.endpoints.usuario",
        "description": "api.v1.endpoints.usuario",
        "peekOfCode": "router = APIRouter()\n@router.post('/cadastro', status_code=status.HTTP_201_CREATED)\nasync def post_usuario(usuario: UsuarioSchema, db: AsyncSession = Depends(get_session)):\n    novo_usuario: UsuarioModel = UsuarioModel(\n        nome_completo=usuario.nome_completo,\n        data_nascimento=usuario.data_nascimento,\n        email=usuario.email,\n        senha=generate_hash(usuario.senha)\n    )\n    async with db as session:",
        "detail": "api.v1.endpoints.usuario",
        "documentation": {}
    },
    {
        "label": "api_router",
        "kind": 5,
        "importPath": "api.v1.api",
        "description": "api.v1.api",
        "peekOfCode": "api_router = APIRouter()\napi_router.include_router(usuario.router, prefix='/usuarios', tags=[\"usuarios\"])\napi_router.include_router(conta.router, prefix='/contas', tags=[\"contas\"])\napi_router.include_router(categoria.router, prefix='/categorias', tags=[\"categorias\"])\napi_router.include_router(cartao_de_credito.router, prefix='/cartaoCredito', tags=[\"cartao_credito\"])\napi_router.include_router(fatura.router, prefix='/fatura', tags=[\"fatura\"])\napi_router.include_router(parente.router, prefix='/parente', tags=[\"parente\"])\napi_router.include_router(movimentacao.router, prefix='/movimentacao', tags=[\"movimentacao\"])",
        "detail": "api.v1.api",
        "documentation": {}
    },
    {
        "label": "generate_token_access",
        "kind": 2,
        "importPath": "core.auth",
        "description": "core.auth",
        "peekOfCode": "def generate_token_access(sub: str) -> str:\n    # https://jwt.io\n    return _generate_token(\n        tipo_token='access_token',\n        tempo_vida=timedelta(minutes=settings.ACCESS_TOKEN_EXPIRE_MINUTES),\n        sub = sub\n    )\ndef generate_password(length: int = 8) -> str:\n    characters = string.ascii_letters + string.digits\n    password = \"\".join(secrets.choice(characters) for _ in range(length))",
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "generate_password",
        "kind": 2,
        "importPath": "core.auth",
        "description": "core.auth",
        "peekOfCode": "def generate_password(length: int = 8) -> str:\n    characters = string.ascii_letters + string.digits\n    password = \"\".join(secrets.choice(characters) for _ in range(length))\n    return password\ndef send_email(email_data: dict, user_email: str) -> None:\n    try:\n        # Verifique se os dados de e-mail foram lidos corretamente\n        sender_email = config(\"EMAIL_ADDRESS\")\n        sender_password = config(\"EMAIL_PASSWORD\")\n        print(\"Endereço de e-mail do remetente:\", sender_email)",
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "send_email",
        "kind": 2,
        "importPath": "core.auth",
        "description": "core.auth",
        "peekOfCode": "def send_email(email_data: dict, user_email: str) -> None:\n    try:\n        # Verifique se os dados de e-mail foram lidos corretamente\n        sender_email = config(\"EMAIL_ADDRESS\")\n        sender_password = config(\"EMAIL_PASSWORD\")\n        print(\"Endereço de e-mail do remetente:\", sender_email)\n        print(\"Senha de aplicativo lida:\", sender_password)\n        # Configura a mensagem\n        msg = email.message.EmailMessage()\n        msg[\"Subject\"] = email_data[\"email_subject\"]",
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "decoded_token",
        "kind": 2,
        "importPath": "core.auth",
        "description": "core.auth",
        "peekOfCode": "def decoded_token(token: str) -> dict:\n    sp = timezone('America/Sao_Paulo')  # Define o fuso horário de São Paulo\n    try:\n        decoded_token = jwt.decode(token, settings.JWT_SECRET, algorithms=[settings.ALGORITHM])\n        return decoded_token\n    except JWTError as e:\n        raise Exception(f\"Token inválido ou expirado: {str(e)}\")",
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "oauth2_schema",
        "kind": 5,
        "importPath": "core.auth",
        "description": "core.auth",
        "peekOfCode": "oauth2_schema = OAuth2PasswordBearer(\n    tokenUrl=f\"{settings.API_V1_STR}/usuarios/login\"\n)\nRECOVER_PASSWORD_SECRET = config('JWT_SECRET')\nasync def auth(email: EmailStr, senha: str, db: AsyncSession) -> Optional[UsuarioModel]:\n    async with db as session:\n        query = select(UsuarioModel).filter(UsuarioModel.email == email)\n        result = await session.execute(query)\n        usuario: UsuarioModel = result.scalars().unique().one_or_none()\n        if not usuario:",
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "RECOVER_PASSWORD_SECRET",
        "kind": 5,
        "importPath": "core.auth",
        "description": "core.auth",
        "peekOfCode": "RECOVER_PASSWORD_SECRET = config('JWT_SECRET')\nasync def auth(email: EmailStr, senha: str, db: AsyncSession) -> Optional[UsuarioModel]:\n    async with db as session:\n        query = select(UsuarioModel).filter(UsuarioModel.email == email)\n        result = await session.execute(query)\n        usuario: UsuarioModel = result.scalars().unique().one_or_none()\n        if not usuario:\n            print(\"check=>>> user\")\n            return None\n        if not check_password(senha, usuario.senha):",
        "detail": "core.auth",
        "documentation": {}
    },
    {
        "label": "Settings",
        "kind": 6,
        "importPath": "core.configs",
        "description": "core.configs",
        "peekOfCode": "class Settings(BaseSettings):\n    \"\"\" \n    Configurações gerais usadas na aplicação\n    \"\"\"\n    API_V1_STR: str = '/api/v1'\n    DB_URL: str = config(\"DATABASE_URL\")\n    DBBaseModel: ClassVar = declarative_base() \n    URL_WEB: str = config(\"URL_WEB\")\n    JWT_SECRET: str = config(\"JWT_SECRET\")  # em uma api real não se deve fornecer isso aqui pra ninguem\n    \"\"\"",
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "settings",
        "kind": 5,
        "importPath": "core.configs",
        "description": "core.configs",
        "peekOfCode": "settings = Settings()",
        "detail": "core.configs",
        "documentation": {}
    },
    {
        "label": "TokenData",
        "kind": 6,
        "importPath": "core.deps",
        "description": "core.deps",
        "peekOfCode": "class TokenData(BaseModel):\n    username: Optional[str] = None\nasync def get_session()-> Generator: # type: ignore\n    session: AsyncSession = Session()\n    try:\n        yield session\n    finally:\n        await session.close()\nasync def get_current_user(db: AsyncSession = Depends(get_session), token: str = Depends(oauth2_schema)) -> UsuarioModel:\n    credential_exception: HTTPException = HTTPException (",
        "detail": "core.deps",
        "documentation": {}
    },
    {
        "label": "check_password",
        "kind": 2,
        "importPath": "core.security",
        "description": "core.security",
        "peekOfCode": "def check_password(senha: str, hash_senha: str) -> bool:\n    return pwd_context.verify(senha, hash_senha)\ndef generate_hash(senha: str)-> str:\n    return pwd_context.hash(senha)",
        "detail": "core.security",
        "documentation": {}
    },
    {
        "label": "generate_hash",
        "kind": 2,
        "importPath": "core.security",
        "description": "core.security",
        "peekOfCode": "def generate_hash(senha: str)-> str:\n    return pwd_context.hash(senha)",
        "detail": "core.security",
        "documentation": {}
    },
    {
        "label": "pwd_context",
        "kind": 5,
        "importPath": "core.security",
        "description": "core.security",
        "peekOfCode": "pwd_context = CryptContext(schemes='bcrypt', deprecated='auto')\ndef check_password(senha: str, hash_senha: str) -> bool:\n    return pwd_context.verify(senha, hash_senha)\ndef generate_hash(senha: str)-> str:\n    return pwd_context.hash(senha)",
        "detail": "core.security",
        "documentation": {}
    },
    {
        "label": "run_migrations_offline",
        "kind": 2,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "def run_migrations_offline() -> None:\n    \"\"\"Run migrations in 'offline' mode.\n    This configures the context with just a URL\n    and not an Engine, though an Engine is acceptable\n    here as well.  By skipping the Engine creation\n    we don't even need a DBAPI to be available.\n    Calls to context.execute() here emit the given string to the\n    script output.\n    \"\"\"\n    url = config.get_main_option(\"sqlalchemy.url\")",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "run_migrations_online",
        "kind": 2,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "def run_migrations_online() -> None:\n    \"\"\"Run migrations in 'online' mode.\n    In this scenario we need to create an Engine\n    and associate a connection with the context.\n    \"\"\"\n    connectable = engine_from_config(\n        config.get_section(config.config_ini_section),\n        prefix=\"sqlalchemy.\",\n        poolclass=pool.NullPool,\n    )",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "config",
        "kind": 5,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "config = context.config\nDATABASE_URL_SINC = config_decouple('DATABASE_URL_SINC')\nconfig.set_main_option('sqlalchemy.url', DATABASE_URL_SINC)\n# Interpret the config file for Python logging.\n# This line sets up loggers basically.\nif config.config_file_name is not None:\n    fileConfig(config.config_file_name)\n# add your model's MetaData object here\n# for 'autogenerate' support\n# from myapp import mymodel",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "DATABASE_URL_SINC",
        "kind": 5,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "DATABASE_URL_SINC = config_decouple('DATABASE_URL_SINC')\nconfig.set_main_option('sqlalchemy.url', DATABASE_URL_SINC)\n# Interpret the config file for Python logging.\n# This line sets up loggers basically.\nif config.config_file_name is not None:\n    fileConfig(config.config_file_name)\n# add your model's MetaData object here\n# for 'autogenerate' support\n# from myapp import mymodel\n# target_metadata = mymodel.Base.metadata",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "target_metadata",
        "kind": 5,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "target_metadata = __all_models.metadata\nprint(\"metadata: => \", target_metadata)\n# other values from the config, defined by the needs of env.py,\n# can be acquired:\n# my_important_option = config.get_main_option(\"my_important_option\")\n# ... etc.\ndef run_migrations_offline() -> None:\n    \"\"\"Run migrations in 'offline' mode.\n    This configures the context with just a URL\n    and not an Engine, though an Engine is acceptable",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "metadata",
        "kind": 5,
        "importPath": "models.__all_models",
        "description": "models.__all_models",
        "peekOfCode": "metadata = settings.DBBaseModel.metadata\n__all__ = [\n    \"CartaoCreditoModel\", \"CategoriaModel\", \"ContaModel\", \"UsuarioModel\",\n    \"FaturaModel\", \"MovimentacaoModel\", \"ParenteModel\", \"RepeticaoModel\", \"DivideModel\"\n]",
        "detail": "models.__all_models",
        "documentation": {}
    },
    {
        "label": "__all__",
        "kind": 5,
        "importPath": "models.__all_models",
        "description": "models.__all_models",
        "peekOfCode": "__all__ = [\n    \"CartaoCreditoModel\", \"CategoriaModel\", \"ContaModel\", \"UsuarioModel\",\n    \"FaturaModel\", \"MovimentacaoModel\", \"ParenteModel\", \"RepeticaoModel\", \"DivideModel\"\n]",
        "detail": "models.__all_models",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoModel",
        "kind": 6,
        "importPath": "models.cartao_credito_model",
        "description": "models.cartao_credito_model",
        "peekOfCode": "class CartaoCreditoModel(settings.DBBaseModel):\n    __tablename__ = \"CARTAO_CREDITO\"\n    id_cartao_credito = Column(BigInteger, primary_key=True)\n    nome = Column(String(60), nullable=False)\n    limite = Column(DECIMAL(10, 2), nullable=False)\n    id_usuario = Column(BigInteger, ForeignKey(\"USUARIO.id_usuario\"), nullable=False)\n    nome_icone = Column(String(100))\n    ativo = Column(Boolean, default=True)  # Adicionando a coluna ativo\n    limite_disponivel = Column(DECIMAL(10,2))\n    usuario = relationship(\"UsuarioModel\", back_populates=\"cartoes_credito\")",
        "detail": "models.cartao_credito_model",
        "documentation": {}
    },
    {
        "label": "CategoriaModel",
        "kind": 6,
        "importPath": "models.categoria_model",
        "description": "models.categoria_model",
        "peekOfCode": "class CategoriaModel(settings.DBBaseModel):\n    __tablename__ = \"CATEGORIA\"\n    id_categoria = Column(BigInteger, primary_key=True)\n    nome = Column(String(60), nullable=False)\n    tipo_categoria = Column(SqlEnum(TipoCategoria), nullable=False)\n    modelo_categoria = Column(SqlEnum(TipoMovimentacao), nullable=False)\n    id_usuario = Column(BigInteger, ForeignKey(\"USUARIO.id_usuario\"), nullable=False)\n    valor_categoria = Column(DECIMAL(10, 2), nullable=True)\n    nome_icone = Column(String(100))\n    ativo = Column(Boolean, default=True, nullable=False)",
        "detail": "models.categoria_model",
        "documentation": {}
    },
    {
        "label": "ContaModel",
        "kind": 6,
        "importPath": "models.conta_model",
        "description": "models.conta_model",
        "peekOfCode": "class ContaModel(settings.DBBaseModel):\n    __tablename__ = \"CONTA\"\n    id_conta = Column(BigInteger, primary_key=True) \n    descricao = Column(String(500), nullable=True)\n    tipo_conta = Column(String(100), nullable=False)\n    id_usuario = Column(BigInteger, ForeignKey(\"USUARIO.id_usuario\"), nullable=False)\n    nome = Column(String(500), nullable=False)\n    nome_icone = Column(String(100))\n    ativo = Column(Boolean, default=True)  # Adicionando a coluna ativo\n    saldo = Column(DECIMAL(10, 2))",
        "detail": "models.conta_model",
        "documentation": {}
    },
    {
        "label": "DivideModel",
        "kind": 6,
        "importPath": "models.divide_model",
        "description": "models.divide_model",
        "peekOfCode": "class DivideModel(settings.DBBaseModel):\n    __tablename__ = \"divide\"\n    id_parente = Column(BigInteger, ForeignKey(\"PARENTE.id_parente\"), primary_key=True)\n    id_movimentacao = Column(BigInteger, ForeignKey(\"MOVIMENTACAO.id_movimentacao\"), primary_key=True)\n    valor = Column(DECIMAL(10, 2), nullable=False)\n    parentes = relationship(\"ParenteModel\", back_populates=\"divisoes\")\n    movimentacoes = relationship(\"MovimentacaoModel\", back_populates=\"divisoes\")",
        "detail": "models.divide_model",
        "documentation": {}
    },
    {
        "label": "TipoMovimentacao",
        "kind": 6,
        "importPath": "models.enums",
        "description": "models.enums",
        "peekOfCode": "class TipoMovimentacao(str, Enum):\n    DESPESA = \"Despesa\"\n    RECEITA = \"Receita\"\n    TRANSFERENCIA = \"Transferencia\"\n    FATURA = \"Fatura\"\nclass FormaPagamento(str, Enum):\n    DEBITO = \"Débito\"\n    CREDITO = \"Crédito\"\n    DINHEIRO = \"Dinheiro\"\nclass CondicaoPagamento(str, Enum):",
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "FormaPagamento",
        "kind": 6,
        "importPath": "models.enums",
        "description": "models.enums",
        "peekOfCode": "class FormaPagamento(str, Enum):\n    DEBITO = \"Débito\"\n    CREDITO = \"Crédito\"\n    DINHEIRO = \"Dinheiro\"\nclass CondicaoPagamento(str, Enum):\n    A_VISTA = \"À vista\"\n    PARCELADO = \"Parcelado\"\n    RECORRENTE = \"Recorrente\"\nclass TipoCategoria(str, Enum):\n    FIXA = \"Fixa\"",
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "CondicaoPagamento",
        "kind": 6,
        "importPath": "models.enums",
        "description": "models.enums",
        "peekOfCode": "class CondicaoPagamento(str, Enum):\n    A_VISTA = \"À vista\"\n    PARCELADO = \"Parcelado\"\n    RECORRENTE = \"Recorrente\"\nclass TipoCategoria(str, Enum):\n    FIXA = \"Fixa\"\n    VARIAVEL = \"Variável\"\n    EXTRA = \"Extra\"\nclass TipoConta(str, Enum):\n    CORRENTE = \"Corrente\"",
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoCategoria",
        "kind": 6,
        "importPath": "models.enums",
        "description": "models.enums",
        "peekOfCode": "class TipoCategoria(str, Enum):\n    FIXA = \"Fixa\"\n    VARIAVEL = \"Variável\"\n    EXTRA = \"Extra\"\nclass TipoConta(str, Enum):\n    CORRENTE = \"Corrente\"\n    POUPANCA = \"Poupança\"\n    CONTA_PAGAMENTO = \"Conta de pagamento\"\n    CARTEIRA = \"Carteira\"\n    CONTA_SALARIO = \"Conta Salário\"",
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoConta",
        "kind": 6,
        "importPath": "models.enums",
        "description": "models.enums",
        "peekOfCode": "class TipoConta(str, Enum):\n    CORRENTE = \"Corrente\"\n    POUPANCA = \"Poupança\"\n    CONTA_PAGAMENTO = \"Conta de pagamento\"\n    CARTEIRA = \"Carteira\"\n    CONTA_SALARIO = \"Conta Salário\"\nclass TipoRecorrencia(str, Enum):\n    ANUAL = \"Anual\"\n    MENSAL = \"Mensal\"\n    QUINZENAL = \"Quinzenal\"",
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "TipoRecorrencia",
        "kind": 6,
        "importPath": "models.enums",
        "description": "models.enums",
        "peekOfCode": "class TipoRecorrencia(str, Enum):\n    ANUAL = \"Anual\"\n    MENSAL = \"Mensal\"\n    QUINZENAL = \"Quinzenal\"\n    SEMANAL = \"Semanal\"",
        "detail": "models.enums",
        "documentation": {}
    },
    {
        "label": "FaturaModel",
        "kind": 6,
        "importPath": "models.fatura_model",
        "description": "models.fatura_model",
        "peekOfCode": "class FaturaModel(settings.DBBaseModel):\n    __tablename__ = \"FATURA\"\n    id_fatura = Column(BigInteger, primary_key=True)\n    data_vencimento = Column(Date)\n    data_fechamento = Column(Date)\n    data_pagamento = Column(Date)\n    fatura_gastos = Column(DECIMAL(10,2))\n    id_conta = Column(BigInteger, ForeignKey(\"CONTA.id_conta\"))\n    id_cartao_credito = Column(BigInteger, ForeignKey(\"CARTAO_CREDITO.id_cartao_credito\"))\n    conta = relationship(\"ContaModel\", back_populates=\"faturas\")",
        "detail": "models.fatura_model",
        "documentation": {}
    },
    {
        "label": "MovimentacaoModel",
        "kind": 6,
        "importPath": "models.movimentacao_model",
        "description": "models.movimentacao_model",
        "peekOfCode": "class MovimentacaoModel(settings.DBBaseModel):\n    __tablename__ = \"MOVIMENTACAO\"\n    id_movimentacao = Column(BigInteger, primary_key=True)\n    valor = Column(DECIMAL(10, 2), nullable=False)\n    descricao = Column(String(500))\n    tipoMovimentacao = Column(SqlEnum(TipoMovimentacao), nullable=False)\n    forma_pagamento = Column(SqlEnum(FormaPagamento), nullable=False)\n    condicao_pagamento = Column(SqlEnum(CondicaoPagamento), nullable=False)\n    datatime = Column(TIMESTAMP(timezone=True), nullable=True)\n    consolidado = Column(Boolean(), nullable=False)",
        "detail": "models.movimentacao_model",
        "documentation": {}
    },
    {
        "label": "ParenteModel",
        "kind": 6,
        "importPath": "models.parente_model",
        "description": "models.parente_model",
        "peekOfCode": "class ParenteModel(settings.DBBaseModel):\n    __tablename__ = \"PARENTE\"\n    id_parente = Column(BigInteger, primary_key=True)\n    email = Column(String(50), nullable=True)    \n    grau_parentesco = Column(String(100), nullable=False)\n    nome = Column(String(60), nullable=False)\n    id_usuario = Column(BigInteger, ForeignKey(\"USUARIO.id_usuario\"), nullable=False)\n    ativo = Column(Boolean(), default=True)\n    usuario = relationship(\"UsuarioModel\", back_populates=\"parentes\")\n    divisoes = relationship(\"DivideModel\", back_populates=\"parentes\")",
        "detail": "models.parente_model",
        "documentation": {}
    },
    {
        "label": "RepeticaoModel",
        "kind": 6,
        "importPath": "models.repeticao_model",
        "description": "models.repeticao_model",
        "peekOfCode": "class RepeticaoModel(settings.DBBaseModel):\n    __tablename__ = \"REPETICAO\"\n    id_repeticao = Column(BigInteger, primary_key=True)\n    quantidade_parcelas = Column(BigInteger, nullable=False)\n    tipo_recorrencia = Column(String(100), nullable=False)\n    valor_total = Column(DECIMAL, nullable=False)\n    data_inicio = Column(Date, nullable=False)\n    id_usuario = Column(BigInteger, ForeignKey(\"USUARIO.id_usuario\"), nullable=False)\n    movimentacoes = relationship(\"MovimentacaoModel\", back_populates=\"repeticao\")\n    usuario = relationship(\"UsuarioModel\", back_populates=\"repeticao\")",
        "detail": "models.repeticao_model",
        "documentation": {}
    },
    {
        "label": "UsuarioModel",
        "kind": 6,
        "importPath": "models.usuario_model",
        "description": "models.usuario_model",
        "peekOfCode": "class UsuarioModel(settings.DBBaseModel):\n    __tablename__ = \"USUARIO\"\n    id_usuario = Column(BigInteger, primary_key=True)\n    nome_completo = Column(String(50), nullable=False)\n    data_nascimento = Column(Date, nullable=False)\n    email = Column(String(50), nullable=False, unique=True)\n    senha = Column(String(500), nullable=False)\n    contas = relationship(\"ContaModel\", cascade= \"all, delete-orphan\", back_populates=\"usuario\")\n    parentes = relationship(\"ParenteModel\", cascade= \"all, delete-orphan\",back_populates=\"usuario\")\n    cartoes_credito = relationship(\"CartaoCreditoModel\", cascade= \"all, delete-orphan\", back_populates=\"usuario\")",
        "detail": "models.usuario_model",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoSchema",
        "kind": 6,
        "importPath": "schemas.cartao_de_credito_schema",
        "description": "schemas.cartao_de_credito_schema",
        "peekOfCode": "class CartaoCreditoSchema(BaseModel):\n    nome: str\n    limite: Decimal\n    nome_icone: str\n    ativo: Optional[bool] = True\n    model_config = ConfigDict(from_attributes=True)\nclass CartaoCreditoSchemaId(CartaoCreditoSchema):\n    id_usuario: int\n    id_cartao_credito: int\n    limite_disponivel: Decimal",
        "detail": "schemas.cartao_de_credito_schema",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoSchemaId",
        "kind": 6,
        "importPath": "schemas.cartao_de_credito_schema",
        "description": "schemas.cartao_de_credito_schema",
        "peekOfCode": "class CartaoCreditoSchemaId(CartaoCreditoSchema):\n    id_usuario: int\n    id_cartao_credito: int\n    limite_disponivel: Decimal\n    dia_fechamento: Optional[int] = None\n    data_fechamento: Optional[date] = None\n    dia_vencimento: Optional[int] = None\n    fatura_gastos: Optional[Decimal] = None\nclass CartaoCreditoSchemaUpdate(CartaoCreditoSchema):\n    nome: Optional[str] = None",
        "detail": "schemas.cartao_de_credito_schema",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoSchemaUpdate",
        "kind": 6,
        "importPath": "schemas.cartao_de_credito_schema",
        "description": "schemas.cartao_de_credito_schema",
        "peekOfCode": "class CartaoCreditoSchemaUpdate(CartaoCreditoSchema):\n    nome: Optional[str] = None\n    limite: Optional[Decimal] = None\n    nome_icone: Optional[str] = None\n    ativo: Optional[bool] = None\n    dia_fechamento: Optional[int] = None\n    dia_vencimento: Optional[int] = None\nclass CartaoCreditoSchemaFatura(CartaoCreditoSchema):\n    dia_fechamento: int\n    dia_vencimento: int",
        "detail": "schemas.cartao_de_credito_schema",
        "documentation": {}
    },
    {
        "label": "CartaoCreditoSchemaFatura",
        "kind": 6,
        "importPath": "schemas.cartao_de_credito_schema",
        "description": "schemas.cartao_de_credito_schema",
        "peekOfCode": "class CartaoCreditoSchemaFatura(CartaoCreditoSchema):\n    dia_fechamento: int\n    dia_vencimento: int",
        "detail": "schemas.cartao_de_credito_schema",
        "documentation": {}
    },
    {
        "label": "CategoriaSchema",
        "kind": 6,
        "importPath": "schemas.categoria_schema",
        "description": "schemas.categoria_schema",
        "peekOfCode": "class CategoriaSchema(BaseModel):\n    nome: str\n    tipo_categoria: TipoCategoria\n    modelo_categoria: TipoMovimentacao\n    valor_categoria: Optional[Decimal] = None\n    nome_icone: str\n    ativo : Optional[bool] = True\n    model_config = ConfigDict(from_attributes=True)\nclass CategoriaSchemaUpdate(BaseModel):\n    nome: Optional[str] = None",
        "detail": "schemas.categoria_schema",
        "documentation": {}
    },
    {
        "label": "CategoriaSchemaUpdate",
        "kind": 6,
        "importPath": "schemas.categoria_schema",
        "description": "schemas.categoria_schema",
        "peekOfCode": "class CategoriaSchemaUpdate(BaseModel):\n    nome: Optional[str] = None\n    tipo_categoria: Optional[TipoCategoria] = None\n    modelo_categoria: Optional[TipoMovimentacao] = None\n    valor_categoria: Optional[Decimal] = None\n    nome_icone: Optional[str] = None\n    ativo : Optional[bool] = True\nclass CategoriaSchemaId(CategoriaSchema):\n    id_usuario: int\n    id_categoria: int",
        "detail": "schemas.categoria_schema",
        "documentation": {}
    },
    {
        "label": "CategoriaSchemaId",
        "kind": 6,
        "importPath": "schemas.categoria_schema",
        "description": "schemas.categoria_schema",
        "peekOfCode": "class CategoriaSchemaId(CategoriaSchema):\n    id_usuario: int\n    id_categoria: int\n    valor_categoria: Optional[Decimal] = None",
        "detail": "schemas.categoria_schema",
        "documentation": {}
    },
    {
        "label": "ContaSchema",
        "kind": 6,
        "importPath": "schemas.conta_schema",
        "description": "schemas.conta_schema",
        "peekOfCode": "class ContaSchema(BaseModel):\n    descricao: Optional[str] = None\n    tipo_conta: TipoConta\n    nome: str\n    nome_icone: str\n    ativo : Optional[bool] = True\n    model_config = ConfigDict(from_attributes=True)\nclass ContaSchemaId(ContaSchema):\n    id_usuario: int\n    id_conta: int",
        "detail": "schemas.conta_schema",
        "documentation": {}
    },
    {
        "label": "ContaSchemaId",
        "kind": 6,
        "importPath": "schemas.conta_schema",
        "description": "schemas.conta_schema",
        "peekOfCode": "class ContaSchemaId(ContaSchema):\n    id_usuario: int\n    id_conta: int\n    saldo: Decimal\nclass ContaSchemaUpdate(ContaSchema):\n    descricao: Optional[str] = None\n    tipo_conta: Optional[TipoConta] = None\n    nome: Optional[str] = None\n    nome_icone: Optional[str] = None\n    ativo : Optional[bool] = True",
        "detail": "schemas.conta_schema",
        "documentation": {}
    },
    {
        "label": "ContaSchemaUpdate",
        "kind": 6,
        "importPath": "schemas.conta_schema",
        "description": "schemas.conta_schema",
        "peekOfCode": "class ContaSchemaUpdate(ContaSchema):\n    descricao: Optional[str] = None\n    tipo_conta: Optional[TipoConta] = None\n    nome: Optional[str] = None\n    nome_icone: Optional[str] = None\n    ativo : Optional[bool] = True",
        "detail": "schemas.conta_schema",
        "documentation": {}
    },
    {
        "label": "FaturaSchema",
        "kind": 6,
        "importPath": "schemas.fatura_schema",
        "description": "schemas.fatura_schema",
        "peekOfCode": "class FaturaSchema(BaseModel):\n    id_conta: Optional[int] = None\n    model_config = ConfigDict(from_attributes=True)\nclass FaturaSchemaId(FaturaSchema):\n    id_fatura: int\nclass FaturaSchemaUpdate(BaseModel):\n    data_vencimento: Optional[date] = None\n    data_fechamento: Optional[date] = None\n    data_pagamento: Optional[date] = None\n    id_conta: Optional[int] = None",
        "detail": "schemas.fatura_schema",
        "documentation": {}
    },
    {
        "label": "FaturaSchemaId",
        "kind": 6,
        "importPath": "schemas.fatura_schema",
        "description": "schemas.fatura_schema",
        "peekOfCode": "class FaturaSchemaId(FaturaSchema):\n    id_fatura: int\nclass FaturaSchemaUpdate(BaseModel):\n    data_vencimento: Optional[date] = None\n    data_fechamento: Optional[date] = None\n    data_pagamento: Optional[date] = None\n    id_conta: Optional[int] = None\n    id_cartao_credito: Optional[int] = None\nclass FaturaSchemaInfo(FaturaSchema):\n    data_vencimento: date",
        "detail": "schemas.fatura_schema",
        "documentation": {}
    },
    {
        "label": "FaturaSchemaUpdate",
        "kind": 6,
        "importPath": "schemas.fatura_schema",
        "description": "schemas.fatura_schema",
        "peekOfCode": "class FaturaSchemaUpdate(BaseModel):\n    data_vencimento: Optional[date] = None\n    data_fechamento: Optional[date] = None\n    data_pagamento: Optional[date] = None\n    id_conta: Optional[int] = None\n    id_cartao_credito: Optional[int] = None\nclass FaturaSchemaInfo(FaturaSchema):\n    data_vencimento: date\n    data_fechamento: date\n    data_pagamento: Optional[date]",
        "detail": "schemas.fatura_schema",
        "documentation": {}
    },
    {
        "label": "FaturaSchemaInfo",
        "kind": 6,
        "importPath": "schemas.fatura_schema",
        "description": "schemas.fatura_schema",
        "peekOfCode": "class FaturaSchemaInfo(FaturaSchema):\n    data_vencimento: date\n    data_fechamento: date\n    data_pagamento: Optional[date]\n    id_cartao_credito: int\n    fatura_gastos: Decimal\n    nome_conta: Optional[str] = None\n    nome_cartao: Optional[str] = None",
        "detail": "schemas.fatura_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchema",
        "kind": 6,
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "peekOfCode": "class MovimentacaoSchema(BaseModel):\n    valor: Decimal\n    descricao: Optional[str]\n    tipoMovimentacao: Optional[TipoMovimentacao]\n    forma_pagamento: Optional[FormaPagamento]\n    condicao_pagamento: Optional[CondicaoPagamento]\n    datatime: Optional[datetime]\n    quantidade_parcelas: Optional[int]\n    consolidado: bool\n    tipo_recorrencia: Optional[str]",
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchemaId",
        "kind": 6,
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "peekOfCode": "class MovimentacaoSchemaId(MovimentacaoSchema):\n    id_movimentacao: int\nclass MovimentacaoSchemaTransferencia(BaseModel):\n    valor: float\n    descricao: Optional[str] = None\n    id_conta_atual: int\n    id_conta_transferencia: int\n    model_config = ConfigDict(from_attributes=True)\nclass ParenteResponse(BaseModel):\n    id_parente: int",
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchemaTransferencia",
        "kind": 6,
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "peekOfCode": "class MovimentacaoSchemaTransferencia(BaseModel):\n    valor: float\n    descricao: Optional[str] = None\n    id_conta_atual: int\n    id_conta_transferencia: int\n    model_config = ConfigDict(from_attributes=True)\nclass ParenteResponse(BaseModel):\n    id_parente: int\n    valor_parente: Decimal\n    nome_parente: Optional[str] = None",
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "ParenteResponse",
        "kind": 6,
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "peekOfCode": "class ParenteResponse(BaseModel):\n    id_parente: int\n    valor_parente: Decimal\n    nome_parente: Optional[str] = None\nclass MovimentacaoSchemaReceitaDespesa(BaseModel):\n    valor: Decimal\n    descricao: Optional[str] = None\n    id_categoria: int\n    id_conta: Optional[int] = None # usar id_financeiro e nao id_conta\n    condicao_pagamento : CondicaoPagamento",
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchemaReceitaDespesa",
        "kind": 6,
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "peekOfCode": "class MovimentacaoSchemaReceitaDespesa(BaseModel):\n    valor: Decimal\n    descricao: Optional[str] = None\n    id_categoria: int\n    id_conta: Optional[int] = None # usar id_financeiro e nao id_conta\n    condicao_pagamento : CondicaoPagamento\n    tipo_recorrencia: TipoRecorrencia\n    datatime: datetime\n    data_pagamento: date\n    consolidado: bool",
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "IdMovimentacaoSchema",
        "kind": 6,
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "peekOfCode": "class IdMovimentacaoSchema(BaseModel):\n    id_categoria: int\nclass MovimentacaoRequestFilterSchema(BaseModel):\n    mes: int\n    ano: int\n    forma_pagamento: Optional[FormaPagamento] = None\n    tipo_movimentacao: Optional [TipoMovimentacao] = None\n    consolidado: Optional[bool] = None\n    id_categoria: Optional[int] = None\n    id_conta: Optional[int] = None",
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoRequestFilterSchema",
        "kind": 6,
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "peekOfCode": "class MovimentacaoRequestFilterSchema(BaseModel):\n    mes: int\n    ano: int\n    forma_pagamento: Optional[FormaPagamento] = None\n    tipo_movimentacao: Optional [TipoMovimentacao] = None\n    consolidado: Optional[bool] = None\n    id_categoria: Optional[int] = None\n    id_conta: Optional[int] = None\n    # id_fatura: Optional[int] = None\n    id_cartao_credito: Optional[int] = None",
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchemaList",
        "kind": 6,
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "peekOfCode": "class MovimentacaoSchemaList(MovimentacaoSchema):\n    nome_icone_categoria: Optional[str]\n    nome_conta: Optional[str]\n    nome_cartao_credito: Optional[str]\n    id_movimentacao: int\n    id_conta_destino: Optional[int]\n    id_cartao_credito: Optional[int]\n    nome_conta_destino : Optional[str]\n    divide_parente: List[ParenteResponse]\n    fatura_info: Optional[FaturaSchemaInfo] ",
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchemaConsolida",
        "kind": 6,
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "peekOfCode": "class MovimentacaoSchemaConsolida(BaseModel):\n    id_movimentacao: int\n    consolidado: bool\nclass MovimentacaoFaturaSchemaList(BaseModel):\n    movimentacoes: List[MovimentacaoSchemaList]\n    faturas: List[FaturaSchemaInfo]\nclass MovimentacaoSchemaUpdate(BaseModel):\n    id_conta_atual: Optional[int] = None # transferencia\n    id_conta_transferencia: Optional[int] = None  # transferencia\n    valor: Decimal",
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoFaturaSchemaList",
        "kind": 6,
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "peekOfCode": "class MovimentacaoFaturaSchemaList(BaseModel):\n    movimentacoes: List[MovimentacaoSchemaList]\n    faturas: List[FaturaSchemaInfo]\nclass MovimentacaoSchemaUpdate(BaseModel):\n    id_conta_atual: Optional[int] = None # transferencia\n    id_conta_transferencia: Optional[int] = None  # transferencia\n    valor: Decimal\n    descricao: Optional[str] = None\n    id_categoria: Optional[int] = None\n    id_conta: Optional[int] = None # usar id_financeiro e nao id_conta",
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "MovimentacaoSchemaUpdate",
        "kind": 6,
        "importPath": "schemas.movimentacao_schema",
        "description": "schemas.movimentacao_schema",
        "peekOfCode": "class MovimentacaoSchemaUpdate(BaseModel):\n    id_conta_atual: Optional[int] = None # transferencia\n    id_conta_transferencia: Optional[int] = None  # transferencia\n    valor: Decimal\n    descricao: Optional[str] = None\n    id_categoria: Optional[int] = None\n    id_conta: Optional[int] = None # usar id_financeiro e nao id_conta\n    condicao_pagamento : Optional[CondicaoPagamento] = None\n    tipo_recorrencia: Optional[TipoRecorrencia] = None \n    datatime: Optional[datetime] = None",
        "detail": "schemas.movimentacao_schema",
        "documentation": {}
    },
    {
        "label": "ParenteSchema",
        "kind": 6,
        "importPath": "schemas.parente_schema",
        "description": "schemas.parente_schema",
        "peekOfCode": "class ParenteSchema(BaseModel):\n    nome: str\n    email: Optional[str] = None\n    grau_parentesco: str\n    ativo : Optional[bool] = True\n    model_config = ConfigDict(from_attributes=True)\nclass ParenteSchemaId(ParenteSchema):\n    id_usuario: int\n    id_parente: int\nclass ParenteSchemaUpdate(ParenteSchema):",
        "detail": "schemas.parente_schema",
        "documentation": {}
    },
    {
        "label": "ParenteSchemaId",
        "kind": 6,
        "importPath": "schemas.parente_schema",
        "description": "schemas.parente_schema",
        "peekOfCode": "class ParenteSchemaId(ParenteSchema):\n    id_usuario: int\n    id_parente: int\nclass ParenteSchemaUpdate(ParenteSchema):\n    grau_parentesco: Optional[str] = None\n    nome: Optional[str] = None\n    email: Optional[str] = None\n    ativo : Optional[bool] = True\nclass ParenteSchemaCobranca(BaseModel):\n    mes: int",
        "detail": "schemas.parente_schema",
        "documentation": {}
    },
    {
        "label": "ParenteSchemaUpdate",
        "kind": 6,
        "importPath": "schemas.parente_schema",
        "description": "schemas.parente_schema",
        "peekOfCode": "class ParenteSchemaUpdate(ParenteSchema):\n    grau_parentesco: Optional[str] = None\n    nome: Optional[str] = None\n    email: Optional[str] = None\n    ativo : Optional[bool] = True\nclass ParenteSchemaCobranca(BaseModel):\n    mes: int\n    ano: int\n    id_parente: int",
        "detail": "schemas.parente_schema",
        "documentation": {}
    },
    {
        "label": "ParenteSchemaCobranca",
        "kind": 6,
        "importPath": "schemas.parente_schema",
        "description": "schemas.parente_schema",
        "peekOfCode": "class ParenteSchemaCobranca(BaseModel):\n    mes: int\n    ano: int\n    id_parente: int",
        "detail": "schemas.parente_schema",
        "documentation": {}
    },
    {
        "label": "RecoverPasswordRequest",
        "kind": 6,
        "importPath": "schemas.recoverPasswordRequest",
        "description": "schemas.recoverPasswordRequest",
        "peekOfCode": "class RecoverPasswordRequest(BaseModel):\n    email: str",
        "detail": "schemas.recoverPasswordRequest",
        "documentation": {}
    },
    {
        "label": "ResetPasswordRequest",
        "kind": 6,
        "importPath": "schemas.resetPasswordRequest",
        "description": "schemas.resetPasswordRequest",
        "peekOfCode": "class ResetPasswordRequest(BaseModel):\n    password:str",
        "detail": "schemas.resetPasswordRequest",
        "documentation": {}
    },
    {
        "label": "UsuarioSchema",
        "kind": 6,
        "importPath": "schemas.usuario_schema",
        "description": "schemas.usuario_schema",
        "peekOfCode": "class UsuarioSchema(BaseModel):\n    nome_completo: str\n    data_nascimento: date\n    email: EmailStr\n    senha: str\nclass LoginDataSchema(BaseModel):\n    email: EmailStr\n    senha: str\nclass UpdateUsuarioSchema(BaseModel):\n    nome_completo: Optional[str] = None",
        "detail": "schemas.usuario_schema",
        "documentation": {}
    },
    {
        "label": "LoginDataSchema",
        "kind": 6,
        "importPath": "schemas.usuario_schema",
        "description": "schemas.usuario_schema",
        "peekOfCode": "class LoginDataSchema(BaseModel):\n    email: EmailStr\n    senha: str\nclass UpdateUsuarioSchema(BaseModel):\n    nome_completo: Optional[str] = None\n    data_nascimento: Optional[date] = None\n    model_config = ConfigDict(from_attributes=True)",
        "detail": "schemas.usuario_schema",
        "documentation": {}
    },
    {
        "label": "UpdateUsuarioSchema",
        "kind": 6,
        "importPath": "schemas.usuario_schema",
        "description": "schemas.usuario_schema",
        "peekOfCode": "class UpdateUsuarioSchema(BaseModel):\n    nome_completo: Optional[str] = None\n    data_nascimento: Optional[date] = None\n    model_config = ConfigDict(from_attributes=True)",
        "detail": "schemas.usuario_schema",
        "documentation": {}
    },
    {
        "label": "getValidToken",
        "kind": 2,
        "importPath": "tests.config",
        "description": "tests.config",
        "peekOfCode": "def getValidToken():\n    return \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzX3Rva2VuIiwiZXhwIjoxNzMyOTUxNjM5LCJpYXQiOjE3MzI5MjI4MzksInN1YiI6IjE3OCJ9.4zMG4roB19fjzfsPVZXhgJq9uOiJrHtEQQbyJcX_yUo\"",
        "detail": "tests.config",
        "documentation": {}
    },
    {
        "label": "TestAjustarSaldoConta",
        "kind": 6,
        "importPath": "tests.test_01_movimentacao",
        "description": "tests.test_01_movimentacao",
        "peekOfCode": "class TestAjustarSaldoConta:\n    def test_despesa_consolidada(self):\n        # Arrange\n        conta = MagicMock()\n        conta.saldo = 100.0\n        movimentacao = MagicMock()\n        movimentacao.tipoMovimentacao = TipoMovimentacao.DESPESA\n        movimentacao.valor = 50.0\n        consolidado = True\n        # Act",
        "detail": "tests.test_01_movimentacao",
        "documentation": {}
    },
    {
        "label": "TestAjustarDataPagamento",
        "kind": 6,
        "importPath": "tests.test_01_movimentacao",
        "description": "tests.test_01_movimentacao",
        "peekOfCode": "class TestAjustarDataPagamento:\n    # Teste para uma movimentação com condição de pagamento RECORRENTE e tipo de recorrência ANUAL\n    def test_ajustar_data_pagamento_anual(self):\n        movimentacao = criar_movimentacao(tipo_recorrencia=TipoRecorrencia.ANUAL)\n        data_pagamento = date(2024, 11, 23)\n        nova_data = ajustar_data_pagamento(movimentacao, data_pagamento)\n        assert nova_data == date(2025, 11, 23)\n    # Teste para uma movimentação com condição de pagamento RECORRENTE e tipo de recorrência QUINZENAL\n    def test_ajustar_data_pagamento_quinzenal(self):\n        movimentacao = criar_movimentacao(tipo_recorrencia=TipoRecorrencia.QUINZENAL)",
        "detail": "tests.test_01_movimentacao",
        "documentation": {}
    },
    {
        "label": "TestCriarRepeticao",
        "kind": 6,
        "importPath": "tests.test_01_movimentacao",
        "description": "tests.test_01_movimentacao",
        "peekOfCode": "class TestCriarRepeticao:\n    async def test_criar_repeticao_recorrente(self, db_mock_repeticao, usuario_logado):\n        movimentacao = criar_movimentacao(\n            condicao_pagamento=CondicaoPagamento.RECORRENTE,\n            tipo_recorrencia=TipoRecorrencia.ANUAL\n        )\n        resultado = await criar_repeticao(movimentacao, usuario_logado, db_mock_repeticao)\n        assert movimentacao.quantidade_parcelas == 4\n        db_mock_repeticao.add.assert_called_once()\n        called_obj = db_mock_repeticao.add.call_args[0][0]",
        "detail": "tests.test_01_movimentacao",
        "documentation": {}
    },
    {
        "label": "TestAjustarLimiteFaturaGastos",
        "kind": 6,
        "importPath": "tests.test_01_movimentacao",
        "description": "tests.test_01_movimentacao",
        "peekOfCode": "class TestAjustarLimiteFaturaGastos:\n    @pytest.fixture\n    def cartao_credito(self):\n        cartao_credito = MagicMock(spec=CartaoCreditoModel)\n        cartao_credito.limite_disponivel = Decimal('1000.00')\n        return cartao_credito\n    @pytest.fixture\n    def fatura(self):\n        fatura = MagicMock(spec=FaturaModel)\n        fatura.fatura_gastos = Decimal('200.00')",
        "detail": "tests.test_01_movimentacao",
        "documentation": {}
    },
    {
        "label": "TestProcessarDelecaoMovimentacao",
        "kind": 6,
        "importPath": "tests.test_01_movimentacao",
        "description": "tests.test_01_movimentacao",
        "peekOfCode": "class TestProcessarDelecaoMovimentacao:\n    async def test_delecao_com_fatura_despesa(self, session_mock, usuario_logado):\n        movimentacao = MovimentacaoModel(\n            id_movimentacao=1,\n            consolidado=True,\n            id_conta=1,\n            tipoMovimentacao=TipoMovimentacao.DESPESA,\n            valor=Decimal('100.00'),\n            participa_limite_fatura_gastos=True,\n            id_fatura=1",
        "detail": "tests.test_01_movimentacao",
        "documentation": {}
    },
    {
        "label": "TestValidacoes",
        "kind": 6,
        "importPath": "tests.test_01_movimentacao",
        "description": "tests.test_01_movimentacao",
        "peekOfCode": "class TestValidacoes:\n    @pytest.fixture\n    def mock_session(self):\n        session = AsyncMock(spec=AsyncSession)\n        return session\n    @pytest.fixture\n    def mock_usuario_logado(self):\n        usuario = Mock()\n        usuario.id_usuario = 1\n        usuario.nome_completo = \"Usuário Teste\"",
        "detail": "tests.test_01_movimentacao",
        "documentation": {}
    },
    {
        "label": "TestCreateDespesa",
        "kind": 6,
        "importPath": "tests.test_01_movimentacao",
        "description": "tests.test_01_movimentacao",
        "peekOfCode": "class TestCreateDespesa:\n    async def test_create_movimentacao_despesa(self):\n        mock_session = AsyncMock(spec=AsyncSession)\n        mock_usuario = UsuarioModel(id_usuario=1)\n        movimentacao_data = MovimentacaoSchemaReceitaDespesa(\n            valor=100.00,\n            descricao=\"Teste de Despesa\",\n            datatime=datetime.now(),\n            data_pagamento=date.today(),\n            forma_pagamento=FormaPagamento.DEBITO,",
        "detail": "tests.test_01_movimentacao",
        "documentation": {}
    },
    {
        "label": "TestCalcularParcelasPrecisas",
        "kind": 6,
        "importPath": "tests.test_01_movimentacao",
        "description": "tests.test_01_movimentacao",
        "peekOfCode": "class TestCalcularParcelasPrecisas(unittest.TestCase):\n    def test_calcular_parcelas_precisas(self):\n        valor_total = 100.00\n        quantidade_parcelas = 3\n        valor_primeira_parcela, valor_parcela = calcular_parcelas_precisas(valor_total, quantidade_parcelas)\n        valor_esperado_primeira_parcela = Decimal('33.34')\n        valor_esperado_parcela = Decimal('33.33')\n        self.assertEqual(valor_primeira_parcela, valor_esperado_primeira_parcela)\n        self.assertEqual(valor_parcela, valor_esperado_parcela)\n    def test_calcular_parcelas_precisas_valores_decimal(self):",
        "detail": "tests.test_01_movimentacao",
        "documentation": {}
    },
    {
        "label": "criar_movimentacao",
        "kind": 2,
        "importPath": "tests.test_01_movimentacao",
        "description": "tests.test_01_movimentacao",
        "peekOfCode": "def criar_movimentacao(**kwargs):\n    return MovimentacaoSchemaReceitaDespesa(\n        **{**default_data, **kwargs}\n    )\nclass TestAjustarDataPagamento:\n    # Teste para uma movimentação com condição de pagamento RECORRENTE e tipo de recorrência ANUAL\n    def test_ajustar_data_pagamento_anual(self):\n        movimentacao = criar_movimentacao(tipo_recorrencia=TipoRecorrencia.ANUAL)\n        data_pagamento = date(2024, 11, 23)\n        nova_data = ajustar_data_pagamento(movimentacao, data_pagamento)",
        "detail": "tests.test_01_movimentacao",
        "documentation": {}
    },
    {
        "label": "db_mock_repeticao",
        "kind": 2,
        "importPath": "tests.test_01_movimentacao",
        "description": "tests.test_01_movimentacao",
        "peekOfCode": "def db_mock_repeticao():\n    db = MagicMock(AsyncSession)\n    db.flush = AsyncMock()\n    db.refresh = AsyncMock()\n    db.add = MagicMock()\n    # Configurando o mock de refresh para modificar a instância corretamente\n    async def mock_refresh(instance):\n        if isinstance(instance, RepeticaoModel):\n            instance.id_repeticao = 1\n    db.refresh.side_effect = mock_refresh",
        "detail": "tests.test_01_movimentacao",
        "documentation": {}
    },
    {
        "label": "usuario_logado",
        "kind": 2,
        "importPath": "tests.test_01_movimentacao",
        "description": "tests.test_01_movimentacao",
        "peekOfCode": "def usuario_logado():\n    return UsuarioModel(id_usuario=1)\n@pytest.mark.asyncio\nclass TestCriarRepeticao:\n    async def test_criar_repeticao_recorrente(self, db_mock_repeticao, usuario_logado):\n        movimentacao = criar_movimentacao(\n            condicao_pagamento=CondicaoPagamento.RECORRENTE,\n            tipo_recorrencia=TipoRecorrencia.ANUAL\n        )\n        resultado = await criar_repeticao(movimentacao, usuario_logado, db_mock_repeticao)",
        "detail": "tests.test_01_movimentacao",
        "documentation": {}
    },
    {
        "label": "session_mock",
        "kind": 2,
        "importPath": "tests.test_01_movimentacao",
        "description": "tests.test_01_movimentacao",
        "peekOfCode": "def session_mock():\n    session = MagicMock(AsyncSession)\n    session.execute = AsyncMock()\n    session.delete = AsyncMock()\n    session.get = AsyncMock()\n    session.add = MagicMock()\n    mock_result = MagicMock()\n    mock_result.scalars.return_value.one_or_none.return_value = None\n    session.execute.return_value = mock_result\n    return session",
        "detail": "tests.test_01_movimentacao",
        "documentation": {}
    },
    {
        "label": "default_data",
        "kind": 5,
        "importPath": "tests.test_01_movimentacao",
        "description": "tests.test_01_movimentacao",
        "peekOfCode": "default_data = {\n    \"valor\": Decimal('100.00'),\n    \"id_categoria\": 1,\n    \"id_conta\": 1,\n    \"condicao_pagamento\": CondicaoPagamento.RECORRENTE,\n    \"tipo_recorrencia\": TipoRecorrencia.ANUAL,\n    \"datatime\": datetime(2024, 11, 23, 12, 0),\n    \"data_pagamento\": date(2024, 11, 23),\n    \"consolidado\": True,\n    \"forma_pagamento\": FormaPagamento.CREDITO,",
        "detail": "tests.test_01_movimentacao",
        "documentation": {}
    },
    {
        "label": "TestPostUsuario",
        "kind": 6,
        "importPath": "tests.test_02_usuario",
        "description": "tests.test_02_usuario",
        "peekOfCode": "class TestPostUsuario(unittest.IsolatedAsyncioTestCase):\n    @classmethod\n    def setUpClass(cls):\n        # Configura o patch do get_session compartilhado para todos os testes\n        cls.mock_get_session = AsyncMock()\n        cls.session_patch = patch(\n            \"api.v1.endpoints.usuario.get_session\", new=AsyncMock(return_value=cls.mock_get_session)\n        )\n        cls.session_patch.start()\n    @classmethod",
        "detail": "tests.test_02_usuario",
        "documentation": {}
    },
    {
        "label": "TestSendEmail",
        "kind": 6,
        "importPath": "tests.test_03_auth",
        "description": "tests.test_03_auth",
        "peekOfCode": "class TestSendEmail(unittest.TestCase):\n    @patch(\"core.auth.smtplib.SMTP\")\n    @patch(\"core.auth.config\")\n    def test_send_email_success(self, mock_config, mock_smtp):\n        mock_config.side_effect = lambda key: \"mock_value\" if key in [\"EMAIL_ADDRESS\", \"EMAIL_PASSWORD\"] else None\n        mock_server = MagicMock()\n        mock_smtp.return_value.__enter__.return_value = mock_server\n        email_data = {\n            \"email_subject\": \"Test Subject\",\n            \"email_body\": \"<html><body><h1>Test Body</h1></body></html>\"",
        "detail": "tests.test_03_auth",
        "documentation": {}
    },
    {
        "label": "TestDecodedToken",
        "kind": 6,
        "importPath": "tests.test_03_auth",
        "description": "tests.test_03_auth",
        "peekOfCode": "class TestDecodedToken(unittest.TestCase):\n    @patch(\"core.auth.jwt.decode\")\n    @patch(\"core.auth.settings.JWT_SECRET\", new=\"secret\")\n    @patch(\"core.auth.settings.ALGORITHM\", new=\"HS256\")\n    def test_decoded_token_success(self, mock_decode):\n        mock_decode.return_value = {\"user_id\": 123, \"username\": \"john_doe\"}\n        token = \"valid_token\"\n        result = core.auth.decoded_token(token)\n        mock_decode.assert_called_once_with(token, \"secret\", algorithms=[\"HS256\"])\n        self.assertEqual(result, {\"user_id\": 123, \"username\": \"john_doe\"})",
        "detail": "tests.test_03_auth",
        "documentation": {}
    },
    {
        "label": "TestGeneratePassword",
        "kind": 6,
        "importPath": "tests.test_03_auth",
        "description": "tests.test_03_auth",
        "peekOfCode": "class TestGeneratePassword(unittest.TestCase):\n    @patch(\"core.auth.secrets.choice\")\n    def test_generate_password_default_length(self, mock_choice):\n        mock_choice.side_effect = lambda characters: characters[0]  # Sempre retorna o primeiro caractere\n        password = core.auth.generate_password()\n        self.assertEqual(len(password), 8)\n        self.assertTrue(all(char in string.ascii_letters + string.digits for char in password))\n    @patch(\"core.auth.secrets.choice\")\n    def test_generate_password_custom_length(self, mock_choice):\n        mock_choice.side_effect = lambda characters: characters[0]  # Sempre retorna o primeiro caractere",
        "detail": "tests.test_03_auth",
        "documentation": {}
    },
    {
        "label": "TestSendEmail",
        "kind": 6,
        "importPath": "tests.test_04_parente",
        "description": "tests.test_04_parente",
        "peekOfCode": "class TestSendEmail(unittest.TestCase):\n    @mock.patch('api.v1.endpoints.parente.smtplib.SMTP')\n    @mock.patch('api.v1.endpoints.parente.config')\n    @mock.patch('api.v1.endpoints.parente.pdfkit.from_string')\n    def test_send_email_success(self, mock_pdfkit, mock_config, mock_smtp):\n        # Configuração do mock\n        mock_config.side_effect = lambda x: 'test_value' if x in ['EMAIL_ADDRESS', 'EMAIL_PASSWORD'] else None\n        mock_server = mock.Mock()\n        mock_smtp.return_value.__enter__.return_value = mock_server  # Configura o __enter__ do mock para retornar o mock_server\n        # Simulando a criação de um PDF",
        "detail": "tests.test_04_parente",
        "documentation": {}
    },
    {
        "label": "TestCriarEmailData",
        "kind": 6,
        "importPath": "tests.test_04_parente",
        "description": "tests.test_04_parente",
        "peekOfCode": "class TestCriarEmailData(unittest.TestCase):\n    def setUp(self):\n        # Criando objetos simulados para 'parente', 'usuario_logado', 'cobranca' e 'movimentacoes_data'\n        self.parente = type('Parente', (object,), {'nome': 'Maria'})()\n        self.usuario_logado = type('Usuario', (object,), {'nome_completo': 'Maria'})()\n        self.cobranca = type('Cobranca', (object,), {'mes': 11, 'ano': 2024})()\n        self.movimentacoes_data = {\n            'movimentacoes_nao_consolidadas': [\n                {'descricao': 'Compra de supermercado', 'data_pagamento': '2024-11-10', 'valor': 150.50},\n                {'descricao': 'Pagamento de energia', 'data_pagamento': '2024-11-15', 'valor': 80.75}",
        "detail": "tests.test_04_parente",
        "documentation": {}
    },
    {
        "label": "TestSendEmail",
        "kind": 6,
        "importPath": "tests.test_05_rotina",
        "description": "tests.test_05_rotina",
        "peekOfCode": "class TestSendEmail(unittest.TestCase):\n    @patch(\"api.v1.endpoints.rotina.smtplib.SMTP\")\n    @patch(\"api.v1.endpoints.rotina.config\")\n    @patch(\"api.v1.endpoints.rotina.pdfkit.from_string\")\n    def test_send_email(self, mock_pdfkit, mock_config, mock_smtp):\n        mock_config.side_effect = lambda key: \"dummy_value\" if key in [\"EMAIL_ADDRESS\", \"EMAIL_PASSWORD\"] else None\n        mock_pdfkit.return_value = b\"PDF content\"\n        mock_server = MagicMock()\n        mock_smtp.return_value.__enter__.return_value = mock_server\n        email_data = {",
        "detail": "tests.test_05_rotina",
        "documentation": {}
    },
    {
        "label": "Conta",
        "kind": 6,
        "importPath": "tests.test_05_rotina",
        "description": "tests.test_05_rotina",
        "peekOfCode": "class Conta:\n    def __init__(self, descricao: str, data_pagamento: datetime, valor: float):\n        self.descricao = descricao\n        self.data_pagamento = data_pagamento\n        self.valor = valor\nclass Fatura:\n    def __init__(self, data_vencimento: datetime, fatura_gastos: float):\n        self.data_vencimento = data_vencimento\n        self.fatura_gastos = fatura_gastos\nclass Cartao:",
        "detail": "tests.test_05_rotina",
        "documentation": {}
    },
    {
        "label": "Fatura",
        "kind": 6,
        "importPath": "tests.test_05_rotina",
        "description": "tests.test_05_rotina",
        "peekOfCode": "class Fatura:\n    def __init__(self, data_vencimento: datetime, fatura_gastos: float):\n        self.data_vencimento = data_vencimento\n        self.fatura_gastos = fatura_gastos\nclass Cartao:\n    def __init__(self, nome: str):\n        self.nome = nome\nclass TestProcessarUsuariosEmAtraso(unittest.TestCase):\n    def setUp(self):\n        # Configura dados de teste para usuários_contas e usuarios_faturas",
        "detail": "tests.test_05_rotina",
        "documentation": {}
    },
    {
        "label": "Cartao",
        "kind": 6,
        "importPath": "tests.test_05_rotina",
        "description": "tests.test_05_rotina",
        "peekOfCode": "class Cartao:\n    def __init__(self, nome: str):\n        self.nome = nome\nclass TestProcessarUsuariosEmAtraso(unittest.TestCase):\n    def setUp(self):\n        # Configura dados de teste para usuários_contas e usuarios_faturas\n        self.usuarios_contas = {\n            \"usuario1@example.com\": [\n                Conta(\"Conta de Água\", datetime(2024, 11, 1), 150.00),\n                Conta(\"Conta de Luz\", datetime(2024, 11, 5), 200.00)",
        "detail": "tests.test_05_rotina",
        "documentation": {}
    },
    {
        "label": "TestProcessarUsuariosEmAtraso",
        "kind": 6,
        "importPath": "tests.test_05_rotina",
        "description": "tests.test_05_rotina",
        "peekOfCode": "class TestProcessarUsuariosEmAtraso(unittest.TestCase):\n    def setUp(self):\n        # Configura dados de teste para usuários_contas e usuarios_faturas\n        self.usuarios_contas = {\n            \"usuario1@example.com\": [\n                Conta(\"Conta de Água\", datetime(2024, 11, 1), 150.00),\n                Conta(\"Conta de Luz\", datetime(2024, 11, 5), 200.00)\n            ],\n            \"usuario2@example.com\": [\n                Conta(\"Conta de Internet\", datetime(2024, 11, 10), 100.00)",
        "detail": "tests.test_05_rotina",
        "documentation": {}
    },
    {
        "label": "TestFuncoesAgendamento",
        "kind": 6,
        "importPath": "tests.test_06_main",
        "description": "tests.test_06_main",
        "peekOfCode": "class TestFuncoesAgendamento(unittest.TestCase):\n    def setUp(self):\n        self.loop = asyncio.new_event_loop()\n        asyncio.set_event_loop(self.loop)\n        patch('api.v1.endpoints.rotina.check_and_send_email', new=mock_check_and_send_email).start()\n        patch('apscheduler.schedulers.background.BackgroundScheduler.add_job').start()\n    @patch('apscheduler.schedulers.background.BackgroundScheduler.add_job')\n    def test_agendar_execucao(self, mock_add_job):\n        agendar_execucao(2, 54, self.loop)\n        mock_add_job.assert_called_once()",
        "detail": "tests.test_06_main",
        "documentation": {}
    },
    {
        "label": "acquire_file_lock",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def acquire_file_lock(file_path):\n    try:\n        lock_file = open(file_path, 'w')\n        fcntl.flock(lock_file.fileno(), fcntl.LOCK_EX | fcntl.LOCK_NB)\n        print(\"Lock adquirido com sucesso.\")\n        return lock_file\n    except IOError:\n        print(\"Outro processo já está executando a tarefa.\")\n        return None\ndef release_file_lock(lock_file):",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "release_file_lock",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def release_file_lock(lock_file):\n    if lock_file:\n        fcntl.flock(lock_file.fileno(), fcntl.LOCK_UN)  # Libera o lock\n        lock_file.close()\n        print(\"Lock liberado.\")\ndef executar_funcao_assincrona(loop):\n    lock_file = acquire_file_lock('/tmp/check_and_send_email.lock')  # Caminho do arquivo de lock\n    if lock_file:\n        try:\n            asyncio.run_coroutine_threadsafe(check_and_send_email(), loop)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "executar_funcao_assincrona",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def executar_funcao_assincrona(loop):\n    lock_file = acquire_file_lock('/tmp/check_and_send_email.lock')  # Caminho do arquivo de lock\n    if lock_file:\n        try:\n            asyncio.run_coroutine_threadsafe(check_and_send_email(), loop)\n        finally:\n            release_file_lock(lock_file)\ndef agendar_execucao(hora: int, minuto: int, loop):\n    agora = datetime.now()\n    hora_execucao = agora.replace(hour=hora, minute=minuto, second=0, microsecond=0)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "agendar_execucao",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def agendar_execucao(hora: int, minuto: int, loop):\n    agora = datetime.now()\n    hora_execucao = agora.replace(hour=hora, minute=minuto, second=0, microsecond=0)\n    if hora_execucao <= agora:\n        hora_execucao += timedelta(days=1)\n    scheduler.add_job(executar_funcao_assincrona, 'date', run_date=hora_execucao, args=[loop])\n    print(f\"Função agendada para: {hora_execucao}\")\n    current_time = datetime.now().strftime('%H:%M:%S')\n    print(f\"Horário atual: {current_time}\")\n@asynccontextmanager",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "scheduler",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "scheduler = BackgroundScheduler()\ndef acquire_file_lock(file_path):\n    try:\n        lock_file = open(file_path, 'w')\n        fcntl.flock(lock_file.fileno(), fcntl.LOCK_EX | fcntl.LOCK_NB)\n        print(\"Lock adquirido com sucesso.\")\n        return lock_file\n    except IOError:\n        print(\"Outro processo já está executando a tarefa.\")\n        return None",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app = FastAPI(title='Finanças Pessoais', lifespan=lifespan)\napp.include_router(api_router, prefix=settings.API_V1_STR)\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"*\"],\n    allow_methods=[\"GET\", \"POST\", \"OPTIONS\", \"DELETE\", \"PUT\"],\n    allow_headers=[\"*\"],\n)\nif __name__ == '__main__':\n    import uvicorn",
        "detail": "main",
        "documentation": {}
    }
]